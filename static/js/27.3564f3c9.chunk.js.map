{"version":3,"file":"static/js/27.3564f3c9.chunk.js","mappings":"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","sources":["../node_modules/framer-motion/dist/es/render/components/create-proxy.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../node_modules/motion-dom/dist/es/animation/utils/get-value-transition.mjs","../node_modules/motion-utils/dist/es/noop.mjs","../node_modules/motion-utils/dist/es/global-config.mjs","../node_modules/motion-dom/dist/es/frameloop/order.mjs","../node_modules/motion-dom/dist/es/stats/buffer.mjs","../node_modules/motion-dom/dist/es/frameloop/batcher.mjs","../node_modules/motion-dom/dist/es/frameloop/render-step.mjs","../node_modules/motion-dom/dist/es/frameloop/frame.mjs","../node_modules/motion-dom/dist/es/render/utils/keys-transform.mjs","../node_modules/motion-dom/dist/es/render/utils/keys-position.mjs","../node_modules/motion-utils/dist/es/array.mjs","../node_modules/motion-utils/dist/es/subscription-manager.mjs","../node_modules/motion-utils/dist/es/velocity-per-second.mjs","../node_modules/motion-dom/dist/es/frameloop/sync-time.mjs","../node_modules/motion-dom/dist/es/value/index.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../node_modules/motion-dom/dist/es/value/utils/is-motion-value.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/add-will-change.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/get-appear-id.mjs","../node_modules/motion-utils/dist/es/pipe.mjs","../node_modules/motion-utils/dist/es/clamp.mjs","../node_modules/motion-utils/dist/es/time-conversion.mjs","../node_modules/motion-dom/dist/es/stats/animation-count.mjs","../node_modules/motion-dom/dist/es/animation/utils/is-css-variable.mjs","../node_modules/motion-dom/dist/es/value/types/numbers/index.mjs","../node_modules/motion-dom/dist/es/value/types/utils/sanitize.mjs","../node_modules/motion-dom/dist/es/value/types/utils/float-regex.mjs","../node_modules/motion-dom/dist/es/value/types/utils/single-color-regex.mjs","../node_modules/motion-dom/dist/es/value/types/color/utils.mjs","../node_modules/motion-dom/dist/es/value/types/utils/is-nullish.mjs","../node_modules/motion-dom/dist/es/value/types/color/rgba.mjs","../node_modules/motion-dom/dist/es/value/types/color/hex.mjs","../node_modules/motion-dom/dist/es/value/types/numbers/units.mjs","../node_modules/motion-dom/dist/es/value/types/color/hsla.mjs","../node_modules/motion-dom/dist/es/value/types/color/index.mjs","../node_modules/motion-dom/dist/es/value/types/utils/color-regex.mjs","../node_modules/motion-dom/dist/es/value/types/complex/index.mjs","../node_modules/motion-dom/dist/es/value/types/color/hsla-to-rgba.mjs","../node_modules/motion-dom/dist/es/utils/mix/immediate.mjs","../node_modules/motion-dom/dist/es/utils/mix/number.mjs","../node_modules/motion-dom/dist/es/utils/mix/color.mjs","../node_modules/motion-dom/dist/es/utils/mix/visibility.mjs","../node_modules/motion-dom/dist/es/utils/mix/complex.mjs","../node_modules/motion-dom/dist/es/utils/mix/index.mjs","../node_modules/motion-dom/dist/es/animation/drivers/frame.mjs","../node_modules/motion-dom/dist/es/animation/waapi/utils/linear.mjs","../node_modules/motion-dom/dist/es/animation/generators/utils/calc-duration.mjs","../node_modules/motion-dom/dist/es/animation/generators/utils/velocity.mjs","../node_modules/motion-dom/dist/es/animation/generators/spring/defaults.mjs","../node_modules/motion-dom/dist/es/animation/generators/spring/find.mjs","../node_modules/motion-dom/dist/es/animation/generators/spring/index.mjs","../node_modules/motion-dom/dist/es/animation/generators/inertia.mjs","../node_modules/motion-dom/dist/es/animation/generators/utils/create-generator-easing.mjs","../node_modules/motion-utils/dist/es/easing/cubic-bezier.mjs","../node_modules/motion-utils/dist/es/easing/ease.mjs","../node_modules/motion-utils/dist/es/easing/modifiers/mirror.mjs","../node_modules/motion-utils/dist/es/easing/modifiers/reverse.mjs","../node_modules/motion-utils/dist/es/easing/back.mjs","../node_modules/motion-utils/dist/es/easing/anticipate.mjs","../node_modules/motion-utils/dist/es/easing/circ.mjs","../node_modules/motion-utils/dist/es/easing/utils/is-bezier-definition.mjs","../node_modules/motion-utils/dist/es/easing/utils/map.mjs","../node_modules/motion-utils/dist/es/progress.mjs","../node_modules/motion-dom/dist/es/utils/interpolate.mjs","../node_modules/motion-dom/dist/es/animation/keyframes/offsets/default.mjs","../node_modules/motion-dom/dist/es/animation/keyframes/offsets/fill.mjs","../node_modules/motion-dom/dist/es/animation/generators/keyframes.mjs","../node_modules/motion-utils/dist/es/easing/utils/is-easing-array.mjs","../node_modules/motion-dom/dist/es/animation/keyframes/offsets/time.mjs","../node_modules/motion-dom/dist/es/animation/keyframes/get-final.mjs","../node_modules/motion-dom/dist/es/animation/utils/replace-transition-type.mjs","../node_modules/motion-dom/dist/es/animation/utils/WithPromise.mjs","../node_modules/motion-dom/dist/es/animation/JSAnimation.mjs","../node_modules/motion-dom/dist/es/render/dom/parse-transform.mjs","../node_modules/motion-dom/dist/es/animation/keyframes/utils/unit-conversion.mjs","../node_modules/motion-dom/dist/es/animation/keyframes/KeyframesResolver.mjs","../node_modules/motion-dom/dist/es/animation/keyframes/utils/fill-wildcards.mjs","../node_modules/motion-utils/dist/es/memo.mjs","../node_modules/motion-dom/dist/es/utils/supports/scroll-timeline.mjs","../node_modules/motion-dom/dist/es/utils/supports/flags.mjs","../node_modules/motion-dom/dist/es/utils/supports/memo.mjs","../node_modules/motion-dom/dist/es/utils/supports/linear-easing.mjs","../node_modules/motion-dom/dist/es/animation/waapi/easing/cubic-bezier.mjs","../node_modules/motion-dom/dist/es/animation/waapi/easing/supported.mjs","../node_modules/motion-dom/dist/es/animation/waapi/easing/map-easing.mjs","../node_modules/motion-dom/dist/es/animation/waapi/start-waapi-animation.mjs","../node_modules/motion-dom/dist/es/animation/generators/utils/is-generator.mjs","../node_modules/motion-dom/dist/es/animation/NativeAnimation.mjs","../node_modules/motion-dom/dist/es/animation/waapi/utils/apply-generator.mjs","../node_modules/motion-dom/dist/es/render/dom/style-set.mjs","../node_modules/motion-dom/dist/es/render/dom/is-css-var.mjs","../node_modules/motion-dom/dist/es/animation/waapi/utils/unsupported-easing.mjs","../node_modules/motion-dom/dist/es/animation/NativeAnimationExtended.mjs","../node_modules/motion-dom/dist/es/animation/utils/is-animatable.mjs","../node_modules/motion-dom/dist/es/animation/waapi/supports/waapi.mjs","../node_modules/motion-dom/dist/es/animation/AsyncMotionValueAnimation.mjs","../node_modules/motion-dom/dist/es/animation/utils/can-animate.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-transition-defined.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","../node_modules/framer-motion/dist/es/render/utils/get-variant-context.mjs","../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","../node_modules/framer-motion/dist/es/motion/features/Feature.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","../node_modules/motion-dom/dist/es/gestures/drag/state/is-active.mjs","../node_modules/framer-motion/dist/es/events/add-dom-event.mjs","../node_modules/motion-dom/dist/es/gestures/utils/is-primary-pointer.mjs","../node_modules/framer-motion/dist/es/events/event-info.mjs","../node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../node_modules/framer-motion/dist/es/utils/get-context-window.mjs","../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../node_modules/framer-motion/dist/es/utils/distance.mjs","../node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../node_modules/motion-dom/dist/es/gestures/drag/state/set-active.mjs","../node_modules/framer-motion/dist/es/gestures/pan/index.mjs","../node_modules/motion-dom/dist/es/frameloop/microtask.mjs","../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/projection/node/state.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../node_modules/motion-dom/dist/es/utils/is-svg-element.mjs","../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../node_modules/framer-motion/dist/es/utils/delay.mjs","../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../node_modules/motion-dom/dist/es/utils/is-svg-svg-element.mjs","../node_modules/framer-motion/dist/es/animation/animate/single-value.mjs","../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../node_modules/framer-motion/dist/es/gestures/drag/index.mjs","../node_modules/motion-dom/dist/es/gestures/utils/setup.mjs","../node_modules/motion-dom/dist/es/gestures/hover.mjs","../node_modules/framer-motion/dist/es/gestures/hover.mjs","../node_modules/motion-dom/dist/es/gestures/utils/is-node-or-child.mjs","../node_modules/motion-dom/dist/es/gestures/press/utils/is-keyboard-accessible.mjs","../node_modules/motion-dom/dist/es/gestures/press/utils/state.mjs","../node_modules/motion-dom/dist/es/gestures/press/utils/keyboard.mjs","../node_modules/motion-dom/dist/es/gestures/press/index.mjs","../node_modules/framer-motion/dist/es/gestures/press.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../node_modules/framer-motion/dist/es/gestures/focus.mjs","../node_modules/framer-motion/dist/es/motion/features/layout.mjs","../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/index.mjs","../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../node_modules/motion-dom/dist/es/value/types/utils/get-as-type.mjs","../node_modules/motion-dom/dist/es/value/types/int.mjs","../node_modules/motion-dom/dist/es/value/types/maps/transform.mjs","../node_modules/motion-dom/dist/es/value/types/maps/number.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/html/config-motion.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","../node_modules/framer-motion/dist/es/render/components/create-factory.mjs","../node_modules/motion-dom/dist/es/value/types/auto.mjs","../node_modules/motion-dom/dist/es/value/types/test.mjs","../node_modules/motion-dom/dist/es/value/types/dimensions.mjs","../node_modules/motion-utils/dist/es/is-numerical-string.mjs","../node_modules/motion-dom/dist/es/animation/utils/css-variables-conversion.mjs","../node_modules/motion-utils/dist/es/is-zero-value-string.mjs","../node_modules/motion-dom/dist/es/value/types/complex/filter.mjs","../node_modules/motion-dom/dist/es/value/types/maps/defaults.mjs","../node_modules/motion-dom/dist/es/value/types/utils/animatable-none.mjs","../node_modules/motion-dom/dist/es/animation/keyframes/utils/make-none-animatable.mjs","../node_modules/motion-dom/dist/es/animation/keyframes/DOMKeyframesResolver.mjs","../node_modules/motion-dom/dist/es/animation/keyframes/utils/is-none.mjs","../node_modules/motion-dom/dist/es/value/types/utils/find.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../node_modules/framer-motion/dist/es/render/store.mjs","../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../node_modules/framer-motion/dist/es/render/components/motion/proxy.mjs","../node_modules/framer-motion/dist/es/render/components/motion/create.mjs","../node_modules/motion-dom/dist/es/utils/resolve-elements.mjs"],"sourcesContent":["import { warnOnce } from 'motion-utils';\n\nfunction createDOMMotionComponentProxy(componentFactory) {\n    if (typeof Proxy === \"undefined\") {\n        return componentFactory;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    const deprecatedFactoryFunction = (...args) => {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, \"motion() is deprecated. Use motion.create() instead.\");\n        }\n        return componentFactory(...args);\n    };\n    return new Proxy(deprecatedFactoryFunction, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            if (key === \"create\")\n                return componentFactory;\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, componentFactory(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createDOMMotionComponentProxy };\n","function isAnimationControls(v) {\n    return (v !== null &&\n        typeof v === \"object\" &&\n        typeof v.start === \"function\");\n}\n\nexport { isAnimationControls };\n","function getValueState(visualElement) {\n    const state = [{}, {}];\n    visualElement?.values.forEach((value, key) => {\n        state[0][key] = value.get();\n        state[1][key] = value.getVelocity();\n    });\n    return state;\n}\nfunction resolveVariantFromProps(props, definition, custom, visualElement) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, visualElement);\n}\n\nexport { resolveVariant };\n","function getValueTransition(transition, key) {\n    return (transition?.[key] ??\n        transition?.[\"default\"] ??\n        transition);\n}\n\nexport { getValueTransition };\n","/*#__NO_SIDE_EFFECTS__*/\nconst noop = (any) => any;\n\nexport { noop };\n","const MotionGlobalConfig = {};\n\nexport { MotionGlobalConfig };\n","const stepsOrder = [\n    \"setup\", // Compute\n    \"read\", // Read\n    \"resolveKeyframes\", // Write/Read/Write/Read\n    \"preUpdate\", // Compute\n    \"update\", // Compute\n    \"preRender\", // Compute\n    \"render\", // Write\n    \"postRender\", // Compute\n];\n\nexport { stepsOrder };\n","const statsBuffer = {\n    value: null,\n    addProjectionMetrics: null,\n};\n\nexport { statsBuffer };\n","import { MotionGlobalConfig } from 'motion-utils';\nimport { stepsOrder } from './order.mjs';\nimport { createRenderStep } from './render-step.mjs';\n\nconst maxElapsed = 40;\nfunction createRenderBatcher(scheduleNextBatch, allowKeepAlive) {\n    let runNextFrame = false;\n    let useDefaultElapsed = true;\n    const state = {\n        delta: 0.0,\n        timestamp: 0.0,\n        isProcessing: false,\n    };\n    const flagRunNextFrame = () => (runNextFrame = true);\n    const steps = stepsOrder.reduce((acc, key) => {\n        acc[key] = createRenderStep(flagRunNextFrame, allowKeepAlive ? key : undefined);\n        return acc;\n    }, {});\n    const { setup, read, resolveKeyframes, preUpdate, update, preRender, render, postRender, } = steps;\n    const processBatch = () => {\n        const timestamp = MotionGlobalConfig.useManualTiming\n            ? state.timestamp\n            : performance.now();\n        runNextFrame = false;\n        if (!MotionGlobalConfig.useManualTiming) {\n            state.delta = useDefaultElapsed\n                ? 1000 / 60\n                : Math.max(Math.min(timestamp - state.timestamp, maxElapsed), 1);\n        }\n        state.timestamp = timestamp;\n        state.isProcessing = true;\n        // Unrolled render loop for better per-frame performance\n        setup.process(state);\n        read.process(state);\n        resolveKeyframes.process(state);\n        preUpdate.process(state);\n        update.process(state);\n        preRender.process(state);\n        render.process(state);\n        postRender.process(state);\n        state.isProcessing = false;\n        if (runNextFrame && allowKeepAlive) {\n            useDefaultElapsed = false;\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const wake = () => {\n        runNextFrame = true;\n        useDefaultElapsed = true;\n        if (!state.isProcessing) {\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const schedule = stepsOrder.reduce((acc, key) => {\n        const step = steps[key];\n        acc[key] = (process, keepAlive = false, immediate = false) => {\n            if (!runNextFrame)\n                wake();\n            return step.schedule(process, keepAlive, immediate);\n        };\n        return acc;\n    }, {});\n    const cancel = (process) => {\n        for (let i = 0; i < stepsOrder.length; i++) {\n            steps[stepsOrder[i]].cancel(process);\n        }\n    };\n    return { schedule, cancel, state, steps };\n}\n\nexport { createRenderBatcher };\n","import { statsBuffer } from '../stats/buffer.mjs';\n\nfunction createRenderStep(runNextFrame, stepName) {\n    /**\n     * We create and reuse two queues, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let thisFrame = new Set();\n    let nextFrame = new Set();\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    let latestFrameData = {\n        delta: 0.0,\n        timestamp: 0.0,\n        isProcessing: false,\n    };\n    let numCalls = 0;\n    function triggerCallback(callback) {\n        if (toKeepAlive.has(callback)) {\n            step.schedule(callback);\n            runNextFrame();\n        }\n        numCalls++;\n        callback(latestFrameData);\n    }\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const queue = addToCurrentFrame ? thisFrame : nextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            if (!queue.has(callback))\n                queue.add(callback);\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            nextFrame.delete(callback);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            latestFrameData = frameData;\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [thisFrame, nextFrame] = [nextFrame, thisFrame];\n            // Execute this frame\n            thisFrame.forEach(triggerCallback);\n            /**\n             * If we're recording stats then\n             */\n            if (stepName && statsBuffer.value) {\n                statsBuffer.value.frameloop[stepName].push(numCalls);\n            }\n            numCalls = 0;\n            // Clear the frame so no callbacks remain. This is to avoid\n            // memory leaks should this render step not run for a while.\n            thisFrame.clear();\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { noop } from 'motion-utils';\nimport { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: frame, cancel: cancelFrame, state: frameData, steps: frameSteps, } = /* @__PURE__ */ createRenderBatcher(typeof requestAnimationFrame !== \"undefined\" ? requestAnimationFrame : noop, true);\n\nexport { cancelFrame, frame, frameData, frameSteps };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = /*@__PURE__*/ (() => new Set(transformPropOrder))();\n\nexport { transformPropOrder, transformProps };\n","import { transformPropOrder } from './keys-transform.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    ...transformPropOrder,\n]);\n\nexport { positionalKeys };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { MotionGlobalConfig } from 'motion-utils';\nimport { frameData } from './frame.mjs';\n\nlet now;\nfunction clearTime() {\n    now = undefined;\n}\n/**\n * An eventloop-synchronous alternative to performance.now().\n *\n * Ensures that time measurements remain consistent within a synchronous context.\n * Usually calling performance.now() twice within the same synchronous context\n * will return different values which isn't useful for animations when we're usually\n * trying to sync animations to the same frame.\n */\nconst time = {\n    now: () => {\n        if (now === undefined) {\n            time.set(frameData.isProcessing || MotionGlobalConfig.useManualTiming\n                ? frameData.timestamp\n                : performance.now());\n        }\n        return now;\n    },\n    set: (newTime) => {\n        now = newTime;\n        queueMicrotask(clearTime);\n    },\n};\n\nexport { time };\n","import { warnOnce, SubscriptionManager, velocityPerSecond } from 'motion-utils';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\n/**\n * Maximum time between the value of two frames, beyond which we\n * assume the velocity has since been 0.\n */\nconst MAX_VELOCITY_DELTA = 30;\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\nconst collectMotionValues = {\n    current: undefined,\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     */\n    constructor(init, options = {}) {\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = null;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            const currentTime = time.now();\n            /**\n             * If we're updating the value during another frame or eventloop\n             * than the previous frame, then the we set the previous frame value\n             * to current.\n             */\n            if (this.updatedAt !== currentTime) {\n                this.setPrevFrameValue();\n            }\n            this.prev = this.current;\n            this.setCurrent(v);\n            // Update update subscribers\n            if (this.current !== this.prev) {\n                this.events.change?.notify(this.current);\n                if (this.dependents) {\n                    for (const dependent of this.dependents) {\n                        dependent.dirty();\n                    }\n                }\n            }\n            // Update render subscribers\n            if (render) {\n                this.events.renderRequest?.notify(this.current);\n            }\n        };\n        this.hasAnimated = false;\n        this.setCurrent(init);\n        this.owner = options.owner;\n    }\n    setCurrent(current) {\n        this.current = current;\n        this.updatedAt = time.now();\n        if (this.canTrackVelocity === null && current !== undefined) {\n            this.canTrackVelocity = isFloat(this.current);\n        }\n    }\n    setPrevFrameValue(prevFrameValue = this.current) {\n        this.prevFrameValue = prevFrameValue;\n        this.prevUpdatedAt = this.updatedAt;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = undefined;\n        this.prevFrameValue = prev;\n        this.prevUpdatedAt = this.updatedAt - delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v, endAnimation = true) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.prevUpdatedAt = this.prevFrameValue = undefined;\n        endAnimation && this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    dirty() {\n        this.events.change?.notify(this.current);\n    }\n    addDependent(dependent) {\n        if (!this.dependents) {\n            this.dependents = new Set();\n        }\n        this.dependents.add(dependent);\n    }\n    removeDependent(dependent) {\n        if (this.dependents) {\n            this.dependents.delete(dependent);\n        }\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        if (collectMotionValues.current) {\n            collectMotionValues.current.push(this);\n        }\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        const currentTime = time.now();\n        if (!this.canTrackVelocity ||\n            this.prevFrameValue === undefined ||\n            currentTime - this.updatedAt > MAX_VELOCITY_DELTA) {\n            return 0;\n        }\n        const delta = Math.min(this.updatedAt - this.prevUpdatedAt, MAX_VELOCITY_DELTA);\n        // Casts because of parseFloat's poor typing\n        return velocityPerSecond(parseFloat(this.current) -\n            parseFloat(this.prevFrameValue), delta);\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.dependents?.clear();\n        this.events.destroy?.notify();\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, collectMotionValues, motionValue };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { motionValue } from 'motion-dom';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction resolveFinalValueInKeyframes(v) {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved || {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\n\nexport { setTarget };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import { MotionGlobalConfig } from 'motion-utils';\nimport { isWillChangeMotionValue } from './is.mjs';\n\nfunction addValueToWillChange(visualElement, key) {\n    const willChange = visualElement.getValue(\"willChange\");\n    /**\n     * It could be that a user has set willChange to a regular MotionValue,\n     * in which case we can't add the value to it.\n     */\n    if (isWillChangeMotionValue(willChange)) {\n        return willChange.add(key);\n    }\n    else if (!willChange && MotionGlobalConfig.WillChange) {\n        const newWillChange = new MotionGlobalConfig.WillChange(\"auto\");\n        visualElement.addValue(\"willChange\", newWillChange);\n        newWillChange.add(key);\n    }\n}\n\nexport { addValueToWillChange };\n","import { isMotionValue } from 'motion-dom';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/gu, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","import { optimizedAppearDataAttribute } from './data-id.mjs';\n\nfunction getOptimisedAppearId(visualElement) {\n    return visualElement.props[optimizedAppearDataAttribute];\n}\n\nexport { getOptimisedAppearId };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","const clamp = (min, max, v) => {\n    if (v > max)\n        return max;\n    if (v < min)\n        return min;\n    return v;\n};\n\nexport { clamp };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\n/*#__NO_SIDE_EFFECTS__*/\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\n/*#__NO_SIDE_EFFECTS__*/\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","const activeAnimations = {\n    layout: 0,\n    mainThread: 0,\n    waapi: 0,\n};\n\nexport { activeAnimations };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = \n/*@__PURE__*/ checkStringStartsWith(\"--\");\nconst startsAsVariableToken = \n/*@__PURE__*/ checkStringStartsWith(\"var(--\");\nconst isCSSVariableToken = (value) => {\n    const startsWithToken = startsAsVariableToken(value);\n    if (!startsWithToken)\n        return false;\n    // Ensure any comments are stripped from the value as this can harm performance of the regex.\n    return singleCssVariableRegex.test(value.split(\"/*\")[0].trim());\n};\nconst singleCssVariableRegex = /var\\(--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)$/iu;\n\nexport { isCSSVariableName, isCSSVariableToken };\n","import { clamp } from 'motion-utils';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\n\nexport { sanitize };\n","const floatRegex = /-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/gu;\n\nexport { floatRegex };\n","const singleColorRegex = /^(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))$/iu;\n\nexport { singleColorRegex };\n","import { floatRegex } from '../utils/float-regex.mjs';\nimport { isNullish } from '../utils/is-nullish.mjs';\nimport { singleColorRegex } from '../utils/single-color-regex.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((typeof v === \"string\" &&\n        singleColorRegex.test(v) &&\n        v.startsWith(type)) ||\n        (testProp &&\n            !isNullish(v) &&\n            Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (typeof v !== \"string\")\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","function isNullish(v) {\n    return v == null;\n}\n\nexport { isNullish };\n","import { clamp } from 'motion-utils';\nimport { number, alpha } from '../numbers/index.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: /*@__PURE__*/ isColorString(\"rgb\", \"red\"),\n    parse: /*@__PURE__*/ splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: /*@__PURE__*/ isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","/*#__NO_SIDE_EFFECTS__*/\nconst createUnitType = (unit) => ({\n    test: (v) => typeof v === \"string\" && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = /*@__PURE__*/ createUnitType(\"deg\");\nconst percent = /*@__PURE__*/ createUnitType(\"%\");\nconst px = /*@__PURE__*/ createUnitType(\"px\");\nconst vh = /*@__PURE__*/ createUnitType(\"vh\");\nconst vw = /*@__PURE__*/ createUnitType(\"vw\");\nconst progressPercentage = /*@__PURE__*/ (() => ({\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n}))();\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: /*@__PURE__*/ isColorString(\"hsl\", \"hue\"),\n    parse: /*@__PURE__*/ splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return typeof v === \"string\"\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n    getAnimatableNone: (v) => {\n        const parsed = color.parse(v);\n        parsed.alpha = 0;\n        return color.transform(parsed);\n    },\n};\n\nexport { color };\n","const colorRegex = /(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))/giu;\n\nexport { colorRegex };\n","import { color } from '../color/index.mjs';\nimport { colorRegex } from '../utils/color-regex.mjs';\nimport { floatRegex } from '../utils/float-regex.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\n\nfunction test(v) {\n    return (isNaN(v) &&\n        typeof v === \"string\" &&\n        (v.match(floatRegex)?.length || 0) +\n            (v.match(colorRegex)?.length || 0) >\n            0);\n}\nconst NUMBER_TOKEN = \"number\";\nconst COLOR_TOKEN = \"color\";\nconst VAR_TOKEN = \"var\";\nconst VAR_FUNCTION_TOKEN = \"var(\";\nconst SPLIT_TOKEN = \"${}\";\n// this regex consists of the `singleCssVariableRegex|rgbHSLValueRegex|digitRegex`\nconst complexRegex = /var\\s*\\(\\s*--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)|#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\)|-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/giu;\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const values = [];\n    const indexes = {\n        color: [],\n        number: [],\n        var: [],\n    };\n    const types = [];\n    let i = 0;\n    const tokenised = originalValue.replace(complexRegex, (parsedValue) => {\n        if (color.test(parsedValue)) {\n            indexes.color.push(i);\n            types.push(COLOR_TOKEN);\n            values.push(color.parse(parsedValue));\n        }\n        else if (parsedValue.startsWith(VAR_FUNCTION_TOKEN)) {\n            indexes.var.push(i);\n            types.push(VAR_TOKEN);\n            values.push(parsedValue);\n        }\n        else {\n            indexes.number.push(i);\n            types.push(NUMBER_TOKEN);\n            values.push(parseFloat(parsedValue));\n        }\n        ++i;\n        return SPLIT_TOKEN;\n    });\n    const split = tokenised.split(SPLIT_TOKEN);\n    return { values, split, indexes, types };\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { split, types } = analyseComplexValue(source);\n    const numSections = split.length;\n    return (v) => {\n        let output = \"\";\n        for (let i = 0; i < numSections; i++) {\n            output += split[i];\n            if (v[i] !== undefined) {\n                const type = types[i];\n                if (type === NUMBER_TOKEN) {\n                    output += sanitize(v[i]);\n                }\n                else if (type === COLOR_TOKEN) {\n                    output += color.transform(v[i]);\n                }\n                else {\n                    output += v[i];\n                }\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : color.test(v) ? color.getAnimatableNone(v) : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","function mixImmediate(a, b) {\n    return (p) => (p > 0 ? b : a);\n}\n\nexport { mixImmediate };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mixNumber = (from, to, progress) => {\n    return from + (to - from) * progress;\n};\n\nexport { mixNumber };\n","import { warning } from 'motion-utils';\nimport { hex } from '../../value/types/color/hex.mjs';\nimport { hsla } from '../../value/types/color/hsla.mjs';\nimport { hslaToRgba } from '../../value/types/color/hsla-to-rgba.mjs';\nimport { rgba } from '../../value/types/color/rgba.mjs';\nimport { mixImmediate } from './immediate.mjs';\nimport { mixNumber } from './number.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    const expo = v * (to * to - fromExpo) + fromExpo;\n    return expo < 0 ? 0 : Math.sqrt(expo);\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    warning(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    if (!Boolean(type))\n        return false;\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    if (!fromRGBA || !toRGBA) {\n        return mixImmediate(from, to);\n    }\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mixNumber(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","const invisibleValues = new Set([\"none\", \"hidden\"]);\n/**\n * Returns a function that, when provided a progress value between 0 and 1,\n * will return the \"none\" or \"hidden\" string only when the progress is that of\n * the origin or target.\n */\nfunction mixVisibility(origin, target) {\n    if (invisibleValues.has(origin)) {\n        return (p) => (p <= 0 ? origin : target);\n    }\n    else {\n        return (p) => (p >= 1 ? target : origin);\n    }\n}\n\nexport { invisibleValues, mixVisibility };\n","import { pipe, warning } from 'motion-utils';\nimport { isCSSVariableToken } from '../../animation/utils/is-css-variable.mjs';\nimport { color } from '../../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../../value/types/complex/index.mjs';\nimport { mixColor } from './color.mjs';\nimport { mixImmediate } from './immediate.mjs';\nimport { mixNumber as mixNumber$1 } from './number.mjs';\nimport { invisibleValues, mixVisibility } from './visibility.mjs';\n\nfunction mixNumber(a, b) {\n    return (p) => mixNumber$1(a, b, p);\n}\nfunction getMixer(a) {\n    if (typeof a === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof a === \"string\") {\n        return isCSSVariableToken(a)\n            ? mixImmediate\n            : color.test(a)\n                ? mixColor\n                : mixComplex;\n    }\n    else if (Array.isArray(a)) {\n        return mixArray;\n    }\n    else if (typeof a === \"object\") {\n        return color.test(a) ? mixColor : mixObject;\n    }\n    return mixImmediate;\n}\nfunction mixArray(a, b) {\n    const output = [...a];\n    const numValues = output.length;\n    const blendValue = a.map((v, i) => getMixer(v)(v, b[i]));\n    return (p) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](p);\n        }\n        return output;\n    };\n}\nfunction mixObject(a, b) {\n    const output = { ...a, ...b };\n    const blendValue = {};\n    for (const key in output) {\n        if (a[key] !== undefined && b[key] !== undefined) {\n            blendValue[key] = getMixer(a[key])(a[key], b[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n}\nfunction matchOrder(origin, target) {\n    const orderedOrigin = [];\n    const pointers = { color: 0, var: 0, number: 0 };\n    for (let i = 0; i < target.values.length; i++) {\n        const type = target.types[i];\n        const originIndex = origin.indexes[type][pointers[type]];\n        const originValue = origin.values[originIndex] ?? 0;\n        orderedOrigin[i] = originValue;\n        pointers[type]++;\n    }\n    return orderedOrigin;\n}\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.indexes.var.length === targetStats.indexes.var.length &&\n        originStats.indexes.color.length === targetStats.indexes.color.length &&\n        originStats.indexes.number.length >= targetStats.indexes.number.length;\n    if (canInterpolate) {\n        if ((invisibleValues.has(origin) &&\n            !targetStats.values.length) ||\n            (invisibleValues.has(target) &&\n                !originStats.values.length)) {\n            return mixVisibility(origin, target);\n        }\n        return pipe(mixArray(matchOrder(originStats, targetStats), targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { getMixer, mixArray, mixComplex, mixObject };\n","import { getMixer } from './complex.mjs';\nimport { mixNumber } from './number.mjs';\n\nfunction mix(from, to, p) {\n    if (typeof from === \"number\" &&\n        typeof to === \"number\" &&\n        typeof p === \"number\") {\n        return mixNumber(from, to, p);\n    }\n    const mixer = getMixer(from);\n    return mixer(from, to);\n}\n\nexport { mix };\n","import { time } from '../../frameloop/sync-time.mjs';\nimport { frame, cancelFrame, frameData } from '../../frameloop/frame.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: (keepAlive = true) => frame.update(passTimestamp, keepAlive),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => (frameData.isProcessing ? frameData.timestamp : time.now()),\n    };\n};\n\nexport { frameloopDriver };\n","const generateLinearEasing = (easing, duration, // as milliseconds\nresolution = 10 // as milliseconds\n) => {\n    let points = \"\";\n    const numPoints = Math.max(Math.round(duration / resolution), 2);\n    for (let i = 0; i < numPoints; i++) {\n        points += Math.round(easing(i / (numPoints - 1)) * 10000) / 10000 + \", \";\n    }\n    return `linear(${points.substring(0, points.length - 2)})`;\n};\n\nexport { generateLinearEasing };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","import { velocityPerSecond } from 'motion-utils';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","const springDefaults = {\n    // Default spring physics\n    stiffness: 100,\n    damping: 10,\n    mass: 1.0,\n    velocity: 0.0,\n    // Default duration/bounce-based options\n    duration: 800, // in ms\n    bounce: 0.3,\n    visualDuration: 0.3, // in seconds\n    // Rest thresholds\n    restSpeed: {\n        granular: 0.01,\n        default: 2,\n    },\n    restDelta: {\n        granular: 0.005,\n        default: 0.5,\n    },\n    // Limits\n    minDuration: 0.01, // in seconds\n    maxDuration: 10.0, // in seconds\n    minDamping: 0.05,\n    maxDamping: 1,\n};\n\nexport { springDefaults };\n","import { warning, secondsToMilliseconds, clamp, millisecondsToSeconds } from 'motion-utils';\nimport { springDefaults } from './defaults.mjs';\n\nconst safeMin = 0.001;\nfunction findSpring({ duration = springDefaults.duration, bounce = springDefaults.bounce, velocity = springDefaults.velocity, mass = springDefaults.mass, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(springDefaults.maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(springDefaults.minDamping, springDefaults.maxDamping, dampingRatio);\n    duration = clamp(springDefaults.minDuration, springDefaults.maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: springDefaults.stiffness,\n            damping: springDefaults.damping,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring };\n","import { millisecondsToSeconds, secondsToMilliseconds, clamp } from 'motion-utils';\nimport { generateLinearEasing } from '../../waapi/utils/linear.mjs';\nimport { calcGeneratorDuration, maxGeneratorDuration } from '../utils/calc-duration.mjs';\nimport { createGeneratorEasing } from '../utils/create-generator-easing.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { springDefaults } from './defaults.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: springDefaults.velocity,\n        stiffness: springDefaults.stiffness,\n        damping: springDefaults.damping,\n        mass: springDefaults.mass,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        if (options.visualDuration) {\n            const visualDuration = options.visualDuration;\n            const root = (2 * Math.PI) / (visualDuration * 1.2);\n            const stiffness = root * root;\n            const damping = 2 *\n                clamp(0.05, 1, 1 - (options.bounce || 0)) *\n                Math.sqrt(stiffness);\n            springOptions = {\n                ...springOptions,\n                mass: springDefaults.mass,\n                stiffness,\n                damping,\n            };\n        }\n        else {\n            const derived = findSpring(options);\n            springOptions = {\n                ...springOptions,\n                ...derived,\n                mass: springDefaults.mass,\n            };\n            springOptions.isResolvedFromDuration = true;\n        }\n    }\n    return springOptions;\n}\nfunction spring(optionsOrVisualDuration = springDefaults.visualDuration, bounce = springDefaults.bounce) {\n    const options = typeof optionsOrVisualDuration !== \"object\"\n        ? {\n            visualDuration: optionsOrVisualDuration,\n            keyframes: [0, 1],\n            bounce,\n        }\n        : optionsOrVisualDuration;\n    let { restSpeed, restDelta } = options;\n    const origin = options.keyframes[0];\n    const target = options.keyframes[options.keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, duration, velocity, isResolvedFromDuration, } = getSpringOptions({\n        ...options,\n        velocity: -millisecondsToSeconds(options.velocity || 0),\n    });\n    const initialVelocity = velocity || 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale\n        ? springDefaults.restSpeed.granular\n        : springDefaults.restSpeed.default);\n    restDelta || (restDelta = isGranularScale\n        ? springDefaults.restDelta.granular\n        : springDefaults.restDelta.default);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    const generator = {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = t === 0 ? initialVelocity : 0.0;\n                /**\n                 * We only need to calculate velocity for under-damped springs\n                 * as over- and critically-damped springs can't overshoot, so\n                 * checking only for displacement is enough.\n                 */\n                if (dampingRatio < 1) {\n                    currentVelocity =\n                        t === 0\n                            ? secondsToMilliseconds(initialVelocity)\n                            : calcGeneratorVelocity(resolveSpring, t, current);\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n        toString: () => {\n            const calculatedDuration = Math.min(calcGeneratorDuration(generator), maxGeneratorDuration);\n            const easing = generateLinearEasing((progress) => generator.next(calculatedDuration * progress).value, calculatedDuration, 30);\n            return calculatedDuration + \"ms \" + easing;\n        },\n        toTransition: () => { },\n    };\n    return generator;\n}\nspring.applyToOptions = (options) => {\n    const generatorOptions = createGeneratorEasing(options, 100, spring);\n    options.ease = generatorOptions.ease;\n    options.duration = secondsToMilliseconds(generatorOptions.duration);\n    options.type = \"keyframes\";\n    return options;\n};\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value), // TODO: This should be passing * 1000\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t >= timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { millisecondsToSeconds } from 'motion-utils';\nimport { calcGeneratorDuration, maxGeneratorDuration } from './calc-duration.mjs';\n\n/**\n * Create a progress => progress easing function from a generator.\n */\nfunction createGeneratorEasing(options, scale = 100, createGenerator) {\n    const generator = createGenerator({ ...options, keyframes: [0, scale] });\n    const duration = Math.min(calcGeneratorDuration(generator), maxGeneratorDuration);\n    return {\n        type: \"keyframes\",\n        ease: (progress) => {\n            return generator.next(duration * progress).value / scale;\n        },\n        duration: millisecondsToSeconds(duration),\n    };\n}\n\nexport { createGeneratorEasing };\n","import { noop } from '../noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = /*@__PURE__*/ cubicBezier(0.42, 0, 1, 1);\nconst easeOut = /*@__PURE__*/ cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = /*@__PURE__*/ cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = /*@__PURE__*/ cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = /*@__PURE__*/ reverseEasing(backOut);\nconst backInOut = /*@__PURE__*/ mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circIn);\n\nexport { circIn, circInOut, circOut };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","import { invariant } from '../../errors.mjs';\nimport { noop } from '../../noop.mjs';\nimport { anticipate } from '../anticipate.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\nimport { isBezierDefinition } from './is-bezier-definition.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst isValidEasing = (easing) => {\n    return typeof easing === \"string\";\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (isBezierDefinition(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (isValidEasing(definition)) {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\n/*#__NO_SIDE_EFFECTS__*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { invariant, clamp, MotionGlobalConfig, noop, pipe, progress } from 'motion-utils';\nimport { mix } from './mix/index.mjs';\n\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || MotionGlobalConfig.mix || mix;\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revisit this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    if (inputLength === 2 && output[0] === output[1])\n        return () => output[1];\n    const isZeroDeltaRange = input[0] === input[1];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        if (isZeroDeltaRange && v < input[0])\n            return output[0];\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { progress } from 'motion-utils';\nimport { mixNumber } from '../../../utils/mix/number.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mixNumber(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { easeInOut, isEasingArray, easingDefinitionToFunction } from 'motion-utils';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../keyframes/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../keyframes/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","const isNotNull = (value) => value !== null;\nfunction getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }, finalKeyframe, speed = 1) {\n    const resolvedKeyframes = keyframes.filter(isNotNull);\n    const useFirstKeyframe = speed < 0 || (repeat && repeatType !== \"loop\" && repeat % 2 === 1);\n    const index = useFirstKeyframe ? 0 : resolvedKeyframes.length - 1;\n    return !index || finalKeyframe === undefined\n        ? resolvedKeyframes[index]\n        : finalKeyframe;\n}\n\nexport { getFinalKeyframe };\n","import { inertia } from '../generators/inertia.mjs';\nimport { keyframes } from '../generators/keyframes.mjs';\nimport { spring } from '../generators/spring/index.mjs';\n\nconst transitionTypeMap = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\nfunction replaceTransitionType(transition) {\n    if (typeof transition.type === \"string\") {\n        transition.type = transitionTypeMap[transition.type];\n    }\n}\n\nexport { replaceTransitionType };\n","class WithPromise {\n    constructor() {\n        this.updateFinished();\n    }\n    get finished() {\n        return this._finished;\n    }\n    updateFinished() {\n        this._finished = new Promise((resolve) => {\n            this.resolve = resolve;\n        });\n    }\n    notifyFinished() {\n        this.resolve();\n    }\n    /**\n     * Allows the animation to be awaited.\n     *\n     * @deprecated Use `finished` instead.\n     */\n    then(onResolve, onReject) {\n        return this.finished.then(onResolve, onReject);\n    }\n}\n\nexport { WithPromise };\n","import { invariant, pipe, clamp, millisecondsToSeconds, secondsToMilliseconds } from 'motion-utils';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { activeAnimations } from '../stats/animation-count.mjs';\nimport { mix } from '../utils/mix/index.mjs';\nimport { frameloopDriver } from './drivers/frame.mjs';\nimport { inertia } from './generators/inertia.mjs';\nimport { keyframes } from './generators/keyframes.mjs';\nimport { calcGeneratorDuration } from './generators/utils/calc-duration.mjs';\nimport { getFinalKeyframe } from './keyframes/get-final.mjs';\nimport { replaceTransitionType } from './utils/replace-transition-type.mjs';\nimport { WithPromise } from './utils/WithPromise.mjs';\n\nconst percentToProgress = (percent) => percent / 100;\nclass JSAnimation extends WithPromise {\n    constructor(options) {\n        super();\n        this.state = \"idle\";\n        this.startTime = null;\n        this.isStopped = false;\n        /**\n         * The current time of the animation.\n         */\n        this.currentTime = 0;\n        /**\n         * The time at which the animation was paused.\n         */\n        this.holdTime = null;\n        /**\n         * Playback speed as a factor. 0 would be stopped, -1 reverse and 2 double speed.\n         */\n        this.playbackSpeed = 1;\n        /**\n         * This method is bound to the instance to fix a pattern where\n         * animation.stop is returned as a reference from a useEffect.\n         */\n        this.stop = () => {\n            const { motionValue } = this.options;\n            if (motionValue && motionValue.updatedAt !== time.now()) {\n                this.tick(time.now());\n            }\n            this.isStopped = true;\n            if (this.state === \"idle\")\n                return;\n            this.teardown();\n            this.options.onStop?.();\n        };\n        activeAnimations.mainThread++;\n        this.options = options;\n        this.initAnimation();\n        this.play();\n        if (options.autoplay === false)\n            this.pause();\n    }\n    initAnimation() {\n        const { options } = this;\n        replaceTransitionType(options);\n        const { type = keyframes, repeat = 0, repeatDelay = 0, repeatType, velocity = 0, } = options;\n        let { keyframes: keyframes$1 } = options;\n        const generatorFactory = type || keyframes;\n        if (process.env.NODE_ENV !== \"production\" &&\n            generatorFactory !== keyframes) {\n            invariant(keyframes$1.length <= 2, `Only two keyframes currently supported with spring and inertia animations. Trying to animate ${keyframes$1}`);\n        }\n        if (generatorFactory !== keyframes &&\n            typeof keyframes$1[0] !== \"number\") {\n            this.mixKeyframes = pipe(percentToProgress, mix(keyframes$1[0], keyframes$1[1]));\n            keyframes$1 = [0, 100];\n        }\n        const generator = generatorFactory({ ...options, keyframes: keyframes$1 });\n        /**\n         * If we have a mirror repeat type we need to create a second generator that outputs the\n         * mirrored (not reversed) animation and later ping pong between the two generators.\n         */\n        if (repeatType === \"mirror\") {\n            this.mirroredGenerator = generatorFactory({\n                ...options,\n                keyframes: [...keyframes$1].reverse(),\n                velocity: -velocity,\n            });\n        }\n        /**\n         * If duration is undefined and we have repeat options,\n         * we need to calculate a duration from the generator.\n         *\n         * We set it to the generator itself to cache the duration.\n         * Any timeline resolver will need to have already precalculated\n         * the duration by this step.\n         */\n        if (generator.calculatedDuration === null) {\n            generator.calculatedDuration = calcGeneratorDuration(generator);\n        }\n        const { calculatedDuration } = generator;\n        this.calculatedDuration = calculatedDuration;\n        this.resolvedDuration = calculatedDuration + repeatDelay;\n        this.totalDuration = this.resolvedDuration * (repeat + 1) - repeatDelay;\n        this.generator = generator;\n    }\n    updateTime(timestamp) {\n        const animationTime = Math.round(timestamp - this.startTime) * this.playbackSpeed;\n        // Update currentTime\n        if (this.holdTime !== null) {\n            this.currentTime = this.holdTime;\n        }\n        else {\n            // Rounding the time because floating point arithmetic is not always accurate, e.g. 3000.367 - 1000.367 =\n            // 2000.0000000000002. This is a problem when we are comparing the currentTime with the duration, for\n            // example.\n            this.currentTime = animationTime;\n        }\n    }\n    tick(timestamp, sample = false) {\n        const { generator, totalDuration, mixKeyframes, mirroredGenerator, resolvedDuration, calculatedDuration, } = this;\n        if (this.startTime === null)\n            return generator.next(0);\n        const { delay = 0, keyframes, repeat, repeatType, repeatDelay, type, onUpdate, finalKeyframe, } = this.options;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (this.speed > 0) {\n            this.startTime = Math.min(this.startTime, timestamp);\n        }\n        else if (this.speed < 0) {\n            this.startTime = Math.min(timestamp - totalDuration / this.speed, this.startTime);\n        }\n        if (sample) {\n            this.currentTime = timestamp;\n        }\n        else {\n            this.updateTime(timestamp);\n        }\n        // Rebase on delay\n        const timeWithoutDelay = this.currentTime - delay * (this.playbackSpeed >= 0 ? 1 : -1);\n        const isInDelayPhase = this.playbackSpeed >= 0\n            ? timeWithoutDelay < 0\n            : timeWithoutDelay > totalDuration;\n        this.currentTime = Math.max(timeWithoutDelay, 0);\n        // If this animation has finished, set the current time  to the total duration.\n        if (this.state === \"finished\" && this.holdTime === null) {\n            this.currentTime = totalDuration;\n        }\n        let elapsed = this.currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = Math.min(this.currentTime, totalDuration) / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const isOddIteration = Boolean(currentIteration % 2);\n            if (isOddIteration) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            elapsed = clamp(0, 1, iterationProgress) * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes[0] }\n            : frameGenerator.next(elapsed);\n        if (mixKeyframes) {\n            state.value = mixKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done =\n                this.playbackSpeed >= 0\n                    ? this.currentTime >= totalDuration\n                    : this.currentTime <= 0;\n        }\n        const isAnimationFinished = this.holdTime === null &&\n            (this.state === \"finished\" || (this.state === \"running\" && done));\n        // TODO: The exception for inertia could be cleaner here\n        if (isAnimationFinished && type !== inertia) {\n            state.value = getFinalKeyframe(keyframes, this.options, finalKeyframe, this.speed);\n        }\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            this.finish();\n        }\n        return state;\n    }\n    /**\n     * Allows the returned animation to be awaited or promise-chained. Currently\n     * resolves when the animation finishes at all but in a future update could/should\n     * reject if its cancels.\n     */\n    then(resolve, reject) {\n        return this.finished.then(resolve, reject);\n    }\n    get duration() {\n        return millisecondsToSeconds(this.calculatedDuration);\n    }\n    get time() {\n        return millisecondsToSeconds(this.currentTime);\n    }\n    set time(newTime) {\n        newTime = secondsToMilliseconds(newTime);\n        this.currentTime = newTime;\n        if (this.startTime === null ||\n            this.holdTime !== null ||\n            this.playbackSpeed === 0) {\n            this.holdTime = newTime;\n        }\n        else if (this.driver) {\n            this.startTime = this.driver.now() - newTime / this.playbackSpeed;\n        }\n        this.driver?.start(false);\n    }\n    get speed() {\n        return this.playbackSpeed;\n    }\n    set speed(newSpeed) {\n        this.updateTime(time.now());\n        const hasChanged = this.playbackSpeed !== newSpeed;\n        this.playbackSpeed = newSpeed;\n        if (hasChanged) {\n            this.time = millisecondsToSeconds(this.currentTime);\n        }\n    }\n    play() {\n        if (this.isStopped)\n            return;\n        const { driver = frameloopDriver, startTime } = this.options;\n        if (!this.driver) {\n            this.driver = driver((timestamp) => this.tick(timestamp));\n        }\n        this.options.onPlay?.();\n        const now = this.driver.now();\n        if (this.state === \"finished\") {\n            this.updateFinished();\n            this.startTime = now;\n        }\n        else if (this.holdTime !== null) {\n            this.startTime = now - this.holdTime;\n        }\n        else if (!this.startTime) {\n            this.startTime = startTime ?? now;\n        }\n        if (this.state === \"finished\" && this.speed < 0) {\n            this.startTime += this.calculatedDuration;\n        }\n        this.holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        this.state = \"running\";\n        this.driver.start();\n    }\n    pause() {\n        this.state = \"paused\";\n        this.updateTime(time.now());\n        this.holdTime = this.currentTime;\n    }\n    complete() {\n        if (this.state !== \"running\") {\n            this.play();\n        }\n        this.state = \"finished\";\n        this.holdTime = null;\n    }\n    finish() {\n        this.notifyFinished();\n        this.teardown();\n        this.state = \"finished\";\n        this.options.onComplete?.();\n    }\n    cancel() {\n        this.holdTime = null;\n        this.startTime = 0;\n        this.tick(0);\n        this.teardown();\n        this.options.onCancel?.();\n    }\n    teardown() {\n        this.state = \"idle\";\n        this.stopDriver();\n        this.startTime = this.holdTime = null;\n        activeAnimations.mainThread--;\n    }\n    stopDriver() {\n        if (!this.driver)\n            return;\n        this.driver.stop();\n        this.driver = undefined;\n    }\n    sample(sampleTime) {\n        this.startTime = 0;\n        return this.tick(sampleTime, true);\n    }\n    attachTimeline(timeline) {\n        if (this.options.allowFlatten) {\n            this.options.type = \"keyframes\";\n            this.options.ease = \"linear\";\n            this.initAnimation();\n        }\n        this.driver?.stop();\n        return timeline.observe(this);\n    }\n}\n// Legacy function support\nfunction animateValue(options) {\n    return new JSAnimation(options);\n}\n\nexport { JSAnimation, animateValue };\n","const radToDeg = (rad) => (rad * 180) / Math.PI;\nconst rotate = (v) => {\n    const angle = radToDeg(Math.atan2(v[1], v[0]));\n    return rebaseAngle(angle);\n};\nconst matrix2dParsers = {\n    x: 4,\n    y: 5,\n    translateX: 4,\n    translateY: 5,\n    scaleX: 0,\n    scaleY: 3,\n    scale: (v) => (Math.abs(v[0]) + Math.abs(v[3])) / 2,\n    rotate,\n    rotateZ: rotate,\n    skewX: (v) => radToDeg(Math.atan(v[1])),\n    skewY: (v) => radToDeg(Math.atan(v[2])),\n    skew: (v) => (Math.abs(v[1]) + Math.abs(v[2])) / 2,\n};\nconst rebaseAngle = (angle) => {\n    angle = angle % 360;\n    if (angle < 0)\n        angle += 360;\n    return angle;\n};\nconst rotateZ = rotate;\nconst scaleX = (v) => Math.sqrt(v[0] * v[0] + v[1] * v[1]);\nconst scaleY = (v) => Math.sqrt(v[4] * v[4] + v[5] * v[5]);\nconst matrix3dParsers = {\n    x: 12,\n    y: 13,\n    z: 14,\n    translateX: 12,\n    translateY: 13,\n    translateZ: 14,\n    scaleX,\n    scaleY,\n    scale: (v) => (scaleX(v) + scaleY(v)) / 2,\n    rotateX: (v) => rebaseAngle(radToDeg(Math.atan2(v[6], v[5]))),\n    rotateY: (v) => rebaseAngle(radToDeg(Math.atan2(-v[2], v[0]))),\n    rotateZ,\n    rotate: rotateZ,\n    skewX: (v) => radToDeg(Math.atan(v[4])),\n    skewY: (v) => radToDeg(Math.atan(v[1])),\n    skew: (v) => (Math.abs(v[1]) + Math.abs(v[4])) / 2,\n};\nfunction defaultTransformValue(name) {\n    return name.includes(\"scale\") ? 1 : 0;\n}\nfunction parseValueFromTransform(transform, name) {\n    if (!transform || transform === \"none\") {\n        return defaultTransformValue(name);\n    }\n    const matrix3dMatch = transform.match(/^matrix3d\\(([-\\d.e\\s,]+)\\)$/u);\n    let parsers;\n    let match;\n    if (matrix3dMatch) {\n        parsers = matrix3dParsers;\n        match = matrix3dMatch;\n    }\n    else {\n        const matrix2dMatch = transform.match(/^matrix\\(([-\\d.e\\s,]+)\\)$/u);\n        parsers = matrix2dParsers;\n        match = matrix2dMatch;\n    }\n    if (!match) {\n        return defaultTransformValue(name);\n    }\n    const valueParser = parsers[name];\n    const values = match[1].split(\",\").map(convertTransformToNumber);\n    return typeof valueParser === \"function\"\n        ? valueParser(values)\n        : values[valueParser];\n}\nconst readTransformValue = (instance, name) => {\n    const { transform = \"none\" } = getComputedStyle(instance);\n    return parseValueFromTransform(transform, name);\n};\nfunction convertTransformToNumber(value) {\n    return parseFloat(value.trim());\n}\n\nexport { defaultTransformValue, parseValueFromTransform, readTransformValue };\n","import { parseValueFromTransform } from '../../../render/dom/parse-transform.mjs';\nimport { transformPropOrder } from '../../../render/utils/keys-transform.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst isNumOrPxType = (v) => v === number || v === px;\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: (_bbox, { transform }) => parseValueFromTransform(transform, \"x\"),\n    y: (_bbox, { transform }) => parseValueFromTransform(transform, \"y\"),\n};\n// Alias translate longform names\npositionalValues.translateX = positionalValues.x;\npositionalValues.translateY = positionalValues.y;\n\nexport { isNumOrPxType, positionalValues, removeNonTranslationalTransform };\n","import { fillWildcards } from './utils/fill-wildcards.mjs';\nimport { removeNonTranslationalTransform } from './utils/unit-conversion.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst toResolve = new Set();\nlet isScheduled = false;\nlet anyNeedsMeasurement = false;\nlet isForced = false;\nfunction measureAllKeyframes() {\n    if (anyNeedsMeasurement) {\n        const resolversToMeasure = Array.from(toResolve).filter((resolver) => resolver.needsMeasurement);\n        const elementsToMeasure = new Set(resolversToMeasure.map((resolver) => resolver.element));\n        const transformsToRestore = new Map();\n        /**\n         * Write pass\n         * If we're measuring elements we want to remove bounding box-changing transforms.\n         */\n        elementsToMeasure.forEach((element) => {\n            const removedTransforms = removeNonTranslationalTransform(element);\n            if (!removedTransforms.length)\n                return;\n            transformsToRestore.set(element, removedTransforms);\n            element.render();\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureInitialState());\n        // Write\n        elementsToMeasure.forEach((element) => {\n            element.render();\n            const restore = transformsToRestore.get(element);\n            if (restore) {\n                restore.forEach(([key, value]) => {\n                    element.getValue(key)?.set(value);\n                });\n            }\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureEndState());\n        // Write\n        resolversToMeasure.forEach((resolver) => {\n            if (resolver.suspendedScrollY !== undefined) {\n                window.scrollTo(0, resolver.suspendedScrollY);\n            }\n        });\n    }\n    anyNeedsMeasurement = false;\n    isScheduled = false;\n    toResolve.forEach((resolver) => resolver.complete(isForced));\n    toResolve.clear();\n}\nfunction readAllKeyframes() {\n    toResolve.forEach((resolver) => {\n        resolver.readKeyframes();\n        if (resolver.needsMeasurement) {\n            anyNeedsMeasurement = true;\n        }\n    });\n}\nfunction flushKeyframeResolvers() {\n    isForced = true;\n    readAllKeyframes();\n    measureAllKeyframes();\n    isForced = false;\n}\nclass KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element, isAsync = false) {\n        this.state = \"pending\";\n        /**\n         * Track whether this resolver is async. If it is, it'll be added to the\n         * resolver queue and flushed in the next frame. Resolvers that aren't going\n         * to trigger read/write thrashing don't need to be async.\n         */\n        this.isAsync = false;\n        /**\n         * Track whether this resolver needs to perform a measurement\n         * to resolve its keyframes.\n         */\n        this.needsMeasurement = false;\n        this.unresolvedKeyframes = [...unresolvedKeyframes];\n        this.onComplete = onComplete;\n        this.name = name;\n        this.motionValue = motionValue;\n        this.element = element;\n        this.isAsync = isAsync;\n    }\n    scheduleResolve() {\n        this.state = \"scheduled\";\n        if (this.isAsync) {\n            toResolve.add(this);\n            if (!isScheduled) {\n                isScheduled = true;\n                frame.read(readAllKeyframes);\n                frame.resolveKeyframes(measureAllKeyframes);\n            }\n        }\n        else {\n            this.readKeyframes();\n            this.complete();\n        }\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, name, element, motionValue } = this;\n        // If initial keyframe is null we need to read it from the DOM\n        if (unresolvedKeyframes[0] === null) {\n            const currentValue = motionValue?.get();\n            // TODO: This doesn't work if the final keyframe is a wildcard\n            const finalKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n            if (currentValue !== undefined) {\n                unresolvedKeyframes[0] = currentValue;\n            }\n            else if (element && name) {\n                const valueAsRead = element.readValue(name, finalKeyframe);\n                if (valueAsRead !== undefined && valueAsRead !== null) {\n                    unresolvedKeyframes[0] = valueAsRead;\n                }\n            }\n            if (unresolvedKeyframes[0] === undefined) {\n                unresolvedKeyframes[0] = finalKeyframe;\n            }\n            if (motionValue && currentValue === undefined) {\n                motionValue.set(unresolvedKeyframes[0]);\n            }\n        }\n        fillWildcards(unresolvedKeyframes);\n    }\n    setFinalKeyframe() { }\n    measureInitialState() { }\n    renderEndStyles() { }\n    measureEndState() { }\n    complete(isForcedComplete = false) {\n        this.state = \"complete\";\n        this.onComplete(this.unresolvedKeyframes, this.finalKeyframe, isForcedComplete);\n        toResolve.delete(this);\n    }\n    cancel() {\n        if (this.state === \"scheduled\") {\n            toResolve.delete(this);\n            this.state = \"pending\";\n        }\n    }\n    resume() {\n        if (this.state === \"pending\")\n            this.scheduleResolve();\n    }\n}\n\nexport { KeyframeResolver, flushKeyframeResolvers };\n","function fillWildcards(keyframes) {\n    for (let i = 1; i < keyframes.length; i++) {\n        keyframes[i] ?? (keyframes[i] = keyframes[i - 1]);\n    }\n}\n\nexport { fillWildcards };\n","/*#__NO_SIDE_EFFECTS__*/\nfunction memo(callback) {\n    let result;\n    return () => {\n        if (result === undefined)\n            result = callback();\n        return result;\n    };\n}\n\nexport { memo };\n","import { memo } from 'motion-utils';\n\nconst supportsScrollTimeline = /* @__PURE__ */ memo(() => window.ScrollTimeline !== undefined);\n\nexport { supportsScrollTimeline };\n","/**\n * Add the ability for test suites to manually set support flags\n * to better test more environments.\n */\nconst supportsFlags = {};\n\nexport { supportsFlags };\n","import { memo } from 'motion-utils';\nimport { supportsFlags } from './flags.mjs';\n\nfunction memoSupports(callback, supportsFlag) {\n    const memoized = memo(callback);\n    return () => supportsFlags[supportsFlag] ?? memoized();\n}\n\nexport { memoSupports };\n","import { memoSupports } from './memo.mjs';\n\nconst supportsLinearEasing = /*@__PURE__*/ memoSupports(() => {\n    try {\n        document\n            .createElement(\"div\")\n            .animate({ opacity: 0 }, { easing: \"linear(0, 1)\" });\n    }\n    catch (e) {\n        return false;\n    }\n    return true;\n}, \"linearEasing\");\n\nexport { supportsLinearEasing };\n","const cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\n\nexport { cubicBezierAsString };\n","import { cubicBezierAsString } from './cubic-bezier.mjs';\n\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: /*@__PURE__*/ cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: /*@__PURE__*/ cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: /*@__PURE__*/ cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: /*@__PURE__*/ cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\n\nexport { supportedWaapiEasing };\n","import { isBezierDefinition } from 'motion-utils';\nimport { supportsLinearEasing } from '../../../utils/supports/linear-easing.mjs';\nimport { generateLinearEasing } from '../utils/linear.mjs';\nimport { cubicBezierAsString } from './cubic-bezier.mjs';\nimport { supportedWaapiEasing } from './supported.mjs';\n\nfunction mapEasingToNativeEasing(easing, duration) {\n    if (!easing) {\n        return undefined;\n    }\n    else if (typeof easing === \"function\") {\n        return supportsLinearEasing()\n            ? generateLinearEasing(easing, duration)\n            : \"ease-out\";\n    }\n    else if (isBezierDefinition(easing)) {\n        return cubicBezierAsString(easing);\n    }\n    else if (Array.isArray(easing)) {\n        return easing.map((segmentEasing) => mapEasingToNativeEasing(segmentEasing, duration) ||\n            supportedWaapiEasing.easeOut);\n    }\n    else {\n        return supportedWaapiEasing[easing];\n    }\n}\n\nexport { mapEasingToNativeEasing };\n","import { activeAnimations } from '../../stats/animation-count.mjs';\nimport { statsBuffer } from '../../stats/buffer.mjs';\nimport { mapEasingToNativeEasing } from './easing/map-easing.mjs';\n\nfunction startWaapiAnimation(element, valueName, keyframes, { delay = 0, duration = 300, repeat = 0, repeatType = \"loop\", ease = \"easeOut\", times, } = {}, pseudoElement = undefined) {\n    const keyframeOptions = {\n        [valueName]: keyframes,\n    };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease, duration);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    if (statsBuffer.value) {\n        activeAnimations.waapi++;\n    }\n    const options = {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    };\n    if (pseudoElement)\n        options.pseudoElement = pseudoElement;\n    const animation = element.animate(keyframeOptions, options);\n    if (statsBuffer.value) {\n        animation.finished.finally(() => {\n            activeAnimations.waapi--;\n        });\n    }\n    return animation;\n}\n\nexport { startWaapiAnimation };\n","function isGenerator(type) {\n    return typeof type === \"function\" && \"applyToOptions\" in type;\n}\n\nexport { isGenerator };\n","import { invariant, millisecondsToSeconds, secondsToMilliseconds, noop } from 'motion-utils';\nimport { setStyle } from '../render/dom/style-set.mjs';\nimport { supportsScrollTimeline } from '../utils/supports/scroll-timeline.mjs';\nimport { getFinalKeyframe } from './keyframes/get-final.mjs';\nimport { WithPromise } from './utils/WithPromise.mjs';\nimport { startWaapiAnimation } from './waapi/start-waapi-animation.mjs';\nimport { applyGeneratorOptions } from './waapi/utils/apply-generator.mjs';\n\n/**\n * NativeAnimation implements AnimationPlaybackControls for the browser's Web Animations API.\n */\nclass NativeAnimation extends WithPromise {\n    constructor(options) {\n        super();\n        this.finishedTime = null;\n        this.isStopped = false;\n        if (!options)\n            return;\n        const { element, name, keyframes, pseudoElement, allowFlatten = false, finalKeyframe, onComplete, } = options;\n        this.isPseudoElement = Boolean(pseudoElement);\n        this.allowFlatten = allowFlatten;\n        this.options = options;\n        invariant(typeof options.type !== \"string\", `animateMini doesn't support \"type\" as a string. Did you mean to import { spring } from \"motion\"?`);\n        const transition = applyGeneratorOptions(options);\n        this.animation = startWaapiAnimation(element, name, keyframes, transition, pseudoElement);\n        if (transition.autoplay === false) {\n            this.animation.pause();\n        }\n        this.animation.onfinish = () => {\n            this.finishedTime = this.time;\n            if (!pseudoElement) {\n                const keyframe = getFinalKeyframe(keyframes, this.options, finalKeyframe, this.speed);\n                if (this.updateMotionValue) {\n                    this.updateMotionValue(keyframe);\n                }\n                else {\n                    /**\n                     * If we can, we want to commit the final style as set by the user,\n                     * rather than the computed keyframe value supplied by the animation.\n                     */\n                    setStyle(element, name, keyframe);\n                }\n                this.animation.cancel();\n            }\n            onComplete?.();\n            this.notifyFinished();\n        };\n    }\n    play() {\n        if (this.isStopped)\n            return;\n        this.animation.play();\n        if (this.state === \"finished\") {\n            this.updateFinished();\n        }\n    }\n    pause() {\n        this.animation.pause();\n    }\n    complete() {\n        this.animation.finish?.();\n    }\n    cancel() {\n        try {\n            this.animation.cancel();\n        }\n        catch (e) { }\n    }\n    stop() {\n        if (this.isStopped)\n            return;\n        this.isStopped = true;\n        const { state } = this;\n        if (state === \"idle\" || state === \"finished\") {\n            return;\n        }\n        if (this.updateMotionValue) {\n            this.updateMotionValue();\n        }\n        else {\n            this.commitStyles();\n        }\n        if (!this.isPseudoElement)\n            this.cancel();\n    }\n    /**\n     * WAAPI doesn't natively have any interruption capabilities.\n     *\n     * In this method, we commit styles back to the DOM before cancelling\n     * the animation.\n     *\n     * This is designed to be overridden by NativeAnimationExtended, which\n     * will create a renderless JS animation and sample it twice to calculate\n     * its current value, \"previous\" value, and therefore allow\n     * Motion to also correctly calculate velocity for any subsequent animation\n     * while deferring the commit until the next animation frame.\n     */\n    commitStyles() {\n        if (!this.isPseudoElement) {\n            this.animation.commitStyles?.();\n        }\n    }\n    get duration() {\n        const duration = this.animation.effect?.getComputedTiming?.().duration || 0;\n        return millisecondsToSeconds(Number(duration));\n    }\n    get time() {\n        return millisecondsToSeconds(Number(this.animation.currentTime) || 0);\n    }\n    set time(newTime) {\n        this.finishedTime = null;\n        this.animation.currentTime = secondsToMilliseconds(newTime);\n    }\n    /**\n     * The playback speed of the animation.\n     * 1 = normal speed, 2 = double speed, 0.5 = half speed.\n     */\n    get speed() {\n        return this.animation.playbackRate;\n    }\n    set speed(newSpeed) {\n        // Allow backwards playback after finishing\n        if (newSpeed < 0)\n            this.finishedTime = null;\n        this.animation.playbackRate = newSpeed;\n    }\n    get state() {\n        return this.finishedTime !== null\n            ? \"finished\"\n            : this.animation.playState;\n    }\n    get startTime() {\n        return Number(this.animation.startTime);\n    }\n    set startTime(newStartTime) {\n        this.animation.startTime = newStartTime;\n    }\n    /**\n     * Attaches a timeline to the animation, for instance the `ScrollTimeline`.\n     */\n    attachTimeline({ timeline, observe }) {\n        if (this.allowFlatten) {\n            this.animation.effect?.updateTiming({ easing: \"linear\" });\n        }\n        this.animation.onfinish = null;\n        if (timeline && supportsScrollTimeline()) {\n            this.animation.timeline = timeline;\n            return noop;\n        }\n        else {\n            return observe(this);\n        }\n    }\n}\n\nexport { NativeAnimation };\n","import { supportsLinearEasing } from '../../../utils/supports/linear-easing.mjs';\nimport { isGenerator } from '../../generators/utils/is-generator.mjs';\n\nfunction applyGeneratorOptions({ type, ...options }) {\n    if (isGenerator(type) && supportsLinearEasing()) {\n        return type.applyToOptions(options);\n    }\n    else {\n        options.duration ?? (options.duration = 300);\n        options.ease ?? (options.ease = \"easeOut\");\n    }\n    return options;\n}\n\nexport { applyGeneratorOptions };\n","import { isCSSVar } from './is-css-var.mjs';\n\nfunction setStyle(element, name, value) {\n    isCSSVar(name)\n        ? element.style.setProperty(name, value)\n        : (element.style[name] = value);\n}\n\nexport { setStyle };\n","const isCSSVar = (name) => name.startsWith(\"--\");\n\nexport { isCSSVar };\n","import { anticipate, backInOut, circInOut } from 'motion-utils';\n\nconst unsupportedEasingFunctions = {\n    anticipate,\n    backInOut,\n    circInOut,\n};\nfunction isUnsupportedEase(key) {\n    return key in unsupportedEasingFunctions;\n}\nfunction replaceStringEasing(transition) {\n    if (typeof transition.ease === \"string\" &&\n        isUnsupportedEase(transition.ease)) {\n        transition.ease = unsupportedEasingFunctions[transition.ease];\n    }\n}\n\nexport { replaceStringEasing };\n","import { secondsToMilliseconds } from 'motion-utils';\nimport { JSAnimation } from './JSAnimation.mjs';\nimport { NativeAnimation } from './NativeAnimation.mjs';\nimport { replaceTransitionType } from './utils/replace-transition-type.mjs';\nimport { replaceStringEasing } from './waapi/utils/unsupported-easing.mjs';\n\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\nclass NativeAnimationExtended extends NativeAnimation {\n    constructor(options) {\n        /**\n         * The base NativeAnimation function only supports a subset\n         * of Motion easings, and WAAPI also only supports some\n         * easing functions via string/cubic-bezier definitions.\n         *\n         * This function replaces those unsupported easing functions\n         * with a JS easing function. This will later get compiled\n         * to a linear() easing function.\n         */\n        replaceStringEasing(options);\n        /**\n         * Ensure we replace the transition type with a generator function\n         * before passing to WAAPI.\n         *\n         * TODO: Does this have a better home? It could be shared with\n         * JSAnimation.\n         */\n        replaceTransitionType(options);\n        super(options);\n        if (options.startTime) {\n            this.startTime = options.startTime;\n        }\n        this.options = options;\n    }\n    /**\n     * WAAPI doesn't natively have any interruption capabilities.\n     *\n     * Rather than read commited styles back out of the DOM, we can\n     * create a renderless JS animation and sample it twice to calculate\n     * its current value, \"previous\" value, and therefore allow\n     * Motion to calculate velocity for any subsequent animation.\n     */\n    updateMotionValue(value) {\n        const { motionValue, onUpdate, onComplete, element, ...options } = this.options;\n        if (!motionValue)\n            return;\n        if (value !== undefined) {\n            motionValue.set(value);\n            return;\n        }\n        const sampleAnimation = new JSAnimation({\n            ...options,\n            autoplay: false,\n        });\n        const sampleTime = secondsToMilliseconds(this.finishedTime ?? this.time);\n        motionValue.setWithVelocity(sampleAnimation.sample(sampleTime - sampleDelta).value, sampleAnimation.sample(sampleTime).value, sampleDelta);\n        sampleAnimation.stop();\n    }\n}\n\nexport { NativeAnimationExtended };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (value, name) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (name === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { memo } from 'motion-utils';\nimport { isHTMLElement } from '../../../utils/is-html-element.mjs';\n\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    // TODO: Could be re-enabled now we have support for linear() easing\n    // \"background-color\"\n]);\nconst supportsWaapi = /*@__PURE__*/ memo(() => Object.hasOwnProperty.call(Element.prototype, \"animate\"));\nfunction supportsBrowserAnimation(options) {\n    const { motionValue, name, repeatDelay, repeatType, damping, type } = options;\n    if (!isHTMLElement(motionValue?.owner?.current)) {\n        return false;\n    }\n    const { onUpdate, transformTemplate } = motionValue.owner.getProps();\n    return (supportsWaapi() &&\n        name &&\n        acceleratedValues.has(name) &&\n        (name !== \"transform\" || !transformTemplate) &&\n        /**\n         * If we're outputting values to onUpdate then we can't use WAAPI as there's\n         * no way to read the value from WAAPI every frame.\n         */\n        !onUpdate &&\n        !repeatDelay &&\n        repeatType !== \"mirror\" &&\n        damping !== 0 &&\n        type !== \"inertia\");\n}\n\nexport { supportsBrowserAnimation };\n","import { MotionGlobalConfig, noop } from 'motion-utils';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { JSAnimation } from './JSAnimation.mjs';\nimport { getFinalKeyframe } from './keyframes/get-final.mjs';\nimport { KeyframeResolver, flushKeyframeResolvers } from './keyframes/KeyframesResolver.mjs';\nimport { NativeAnimationExtended } from './NativeAnimationExtended.mjs';\nimport { canAnimate } from './utils/can-animate.mjs';\nimport { WithPromise } from './utils/WithPromise.mjs';\nimport { supportsBrowserAnimation } from './waapi/supports/waapi.mjs';\n\n/**\n * Maximum time allowed between an animation being created and it being\n * resolved for us to use the latter as the start time.\n *\n * This is to ensure that while we prefer to \"start\" an animation as soon\n * as it's triggered, we also want to avoid a visual jump if there's a big delay\n * between these two moments.\n */\nconst MAX_RESOLVE_DELAY = 40;\nclass AsyncMotionValueAnimation extends WithPromise {\n    constructor({ autoplay = true, delay = 0, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", keyframes, name, motionValue, element, ...options }) {\n        super();\n        /**\n         * Bound to support return animation.stop pattern\n         */\n        this.stop = () => {\n            if (this._animation) {\n                this._animation.stop();\n                this.stopTimeline?.();\n            }\n            this.keyframeResolver?.cancel();\n        };\n        this.createdAt = time.now();\n        const optionsWithDefaults = {\n            autoplay,\n            delay,\n            type,\n            repeat,\n            repeatDelay,\n            repeatType,\n            name,\n            motionValue,\n            element,\n            ...options,\n        };\n        const KeyframeResolver$1 = element?.KeyframeResolver || KeyframeResolver;\n        this.keyframeResolver = new KeyframeResolver$1(keyframes, (resolvedKeyframes, finalKeyframe, forced) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe, optionsWithDefaults, !forced), name, motionValue, element);\n        this.keyframeResolver?.scheduleResolve();\n    }\n    onKeyframesResolved(keyframes, finalKeyframe, options, sync) {\n        this.keyframeResolver = undefined;\n        const { name, type, velocity, delay, isHandoff, onUpdate } = options;\n        this.resolvedAt = time.now();\n        /**\n         * If we can't animate this value with the resolved keyframes\n         * then we should complete it immediately.\n         */\n        if (!canAnimate(keyframes, name, type, velocity)) {\n            if (MotionGlobalConfig.instantAnimations || !delay) {\n                onUpdate?.(getFinalKeyframe(keyframes, options, finalKeyframe));\n            }\n            keyframes[0] = keyframes[keyframes.length - 1];\n            options.duration = 0;\n            options.repeat = 0;\n        }\n        /**\n         * Resolve startTime for the animation.\n         *\n         * This method uses the createdAt and resolvedAt to calculate the\n         * animation startTime. *Ideally*, we would use the createdAt time as t=0\n         * as the following frame would then be the first frame of the animation in\n         * progress, which would feel snappier.\n         *\n         * However, if there's a delay (main thread work) between the creation of\n         * the animation and the first commited frame, we prefer to use resolvedAt\n         * to avoid a sudden jump into the animation.\n         */\n        const startTime = sync\n            ? !this.resolvedAt\n                ? this.createdAt\n                : this.resolvedAt - this.createdAt > MAX_RESOLVE_DELAY\n                    ? this.resolvedAt\n                    : this.createdAt\n            : undefined;\n        const resolvedOptions = {\n            startTime,\n            finalKeyframe,\n            ...options,\n            keyframes,\n        };\n        /**\n         * Animate via WAAPI if possible. If this is a handoff animation, the optimised animation will be running via\n         * WAAPI. Therefore, this animation must be JS to ensure it runs \"under\" the\n         * optimised animation.\n         */\n        const animation = !isHandoff && supportsBrowserAnimation(resolvedOptions)\n            ? new NativeAnimationExtended({\n                ...resolvedOptions,\n                element: resolvedOptions.motionValue.owner.current,\n            })\n            : new JSAnimation(resolvedOptions);\n        animation.finished.then(() => this.notifyFinished()).catch(noop);\n        if (this.pendingTimeline) {\n            this.stopTimeline = animation.attachTimeline(this.pendingTimeline);\n            this.pendingTimeline = undefined;\n        }\n        this._animation = animation;\n    }\n    get finished() {\n        if (!this._animation) {\n            return this._finished;\n        }\n        else {\n            return this.animation.finished;\n        }\n    }\n    then(onResolve, _onReject) {\n        return this.finished.finally(onResolve).then(() => { });\n    }\n    get animation() {\n        if (!this._animation) {\n            this.keyframeResolver?.resume();\n            flushKeyframeResolvers();\n        }\n        return this._animation;\n    }\n    get duration() {\n        return this.animation.duration;\n    }\n    get time() {\n        return this.animation.time;\n    }\n    set time(newTime) {\n        this.animation.time = newTime;\n    }\n    get speed() {\n        return this.animation.speed;\n    }\n    get state() {\n        return this.animation.state;\n    }\n    set speed(newSpeed) {\n        this.animation.speed = newSpeed;\n    }\n    get startTime() {\n        return this.animation.startTime;\n    }\n    attachTimeline(timeline) {\n        if (this._animation) {\n            this.stopTimeline = this.animation.attachTimeline(timeline);\n        }\n        else {\n            this.pendingTimeline = timeline;\n        }\n        return () => this.stop();\n    }\n    play() {\n        this.animation.play();\n    }\n    pause() {\n        this.animation.pause();\n    }\n    complete() {\n        this.animation.complete();\n    }\n    cancel() {\n        if (this._animation) {\n            this.animation.cancel();\n        }\n        this.keyframeResolver?.cancel();\n    }\n}\n\nexport { AsyncMotionValueAnimation };\n","import { warning } from 'motion-utils';\nimport { isGenerator } from '../generators/utils/is-generator.mjs';\nimport { isAnimatable } from './is-animatable.mjs';\n\nfunction hasKeyframesChanged(keyframes) {\n    const current = keyframes[0];\n    if (keyframes.length === 1)\n        return true;\n    for (let i = 0; i < keyframes.length; i++) {\n        if (keyframes[i] !== current)\n            return true;\n    }\n}\nfunction canAnimate(keyframes, name, type, velocity) {\n    /**\n     * Check if we're able to animate between the start and end keyframes,\n     * and throw a warning if we're attempting to animate between one that's\n     * animatable and another that isn't.\n     */\n    const originKeyframe = keyframes[0];\n    if (originKeyframe === null)\n        return false;\n    /**\n     * These aren't traditionally animatable but we do support them.\n     * In future we could look into making this more generic or replacing\n     * this function with mix() === mixImmediate\n     */\n    if (name === \"display\" || name === \"visibility\")\n        return true;\n    const targetKeyframe = keyframes[keyframes.length - 1];\n    const isOriginAnimatable = isAnimatable(originKeyframe, name);\n    const isTargetAnimatable = isAnimatable(targetKeyframe, name);\n    warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${name} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n    // Always skip if any of these are true\n    if (!isOriginAnimatable || !isTargetAnimatable) {\n        return false;\n    }\n    return (hasKeyframesChanged(keyframes) ||\n        ((type === \"spring\" || isGenerator(type)) && velocity));\n}\n\nexport { canAnimate };\n","const isNotNull = (value) => value !== null;\nfunction getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }, finalKeyframe) {\n    const resolvedKeyframes = keyframes.filter(isNotNull);\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : resolvedKeyframes.length - 1;\n    return !index || finalKeyframe === undefined\n        ? resolvedKeyframes[index]\n        : finalKeyframe;\n}\n\nexport { getFinalKeyframe };\n","import { transformProps } from 'motion-dom';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","import { getValueTransition, frame, JSAnimation, AsyncMotionValueAnimation } from 'motion-dom';\nimport { secondsToMilliseconds, MotionGlobalConfig } from 'motion-utils';\nimport { getFinalKeyframe } from '../animators/waapi/utils/get-final-keyframe.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { isTransitionDefined } from '../utils/is-transition-defined.mjs';\n\nconst animateMotionValue = (name, value, target, transition = {}, element, isHandoff) => (onComplete) => {\n    const valueTransition = getValueTransition(transition, name) || {};\n    /**\n     * Most transition values are currently completely overwritten by value-specific\n     * transitions. In the future it'd be nicer to blend these transitions. But for now\n     * delay actually does inherit from the root transition if not value-specific.\n     */\n    const delay = valueTransition.delay || transition.delay || 0;\n    /**\n     * Elapsed isn't a public transition option but can be passed through from\n     * optimized appear effects in milliseconds.\n     */\n    let { elapsed = 0 } = transition;\n    elapsed = elapsed - secondsToMilliseconds(delay);\n    const options = {\n        keyframes: Array.isArray(target) ? target : [null, target],\n        ease: \"easeOut\",\n        velocity: value.getVelocity(),\n        ...valueTransition,\n        delay: -elapsed,\n        onUpdate: (v) => {\n            value.set(v);\n            valueTransition.onUpdate && valueTransition.onUpdate(v);\n        },\n        onComplete: () => {\n            onComplete();\n            valueTransition.onComplete && valueTransition.onComplete();\n        },\n        name,\n        motionValue: value,\n        element: isHandoff ? undefined : element,\n    };\n    /**\n     * If there's no transition defined for this value, we can generate\n     * unique transition settings for this value.\n     */\n    if (!isTransitionDefined(valueTransition)) {\n        Object.assign(options, getDefaultTransition(name, options));\n    }\n    /**\n     * Both WAAPI and our internal animation functions use durations\n     * as defined by milliseconds, while our external API defines them\n     * as seconds.\n     */\n    options.duration && (options.duration = secondsToMilliseconds(options.duration));\n    options.repeatDelay && (options.repeatDelay = secondsToMilliseconds(options.repeatDelay));\n    /**\n     * Support deprecated way to set initial value. Prefer keyframe syntax.\n     */\n    if (options.from !== undefined) {\n        options.keyframes[0] = options.from;\n    }\n    let shouldSkip = false;\n    if (options.type === false ||\n        (options.duration === 0 && !options.repeatDelay)) {\n        options.duration = 0;\n        if (options.delay === 0) {\n            shouldSkip = true;\n        }\n    }\n    if (MotionGlobalConfig.instantAnimations ||\n        MotionGlobalConfig.skipAnimations) {\n        shouldSkip = true;\n        options.duration = 0;\n        options.delay = 0;\n    }\n    /**\n     * If the transition type or easing has been explicitly set by the user\n     * then we don't want to allow flattening the animation.\n     */\n    options.allowFlatten = !valueTransition.type && !valueTransition.ease;\n    /**\n     * If we can or must skip creating the animation, and apply only\n     * the final keyframe, do so. We also check once keyframes are resolved but\n     * this early check prevents the need to create an animation at all.\n     */\n    if (shouldSkip && !isHandoff && value.get() !== undefined) {\n        const finalKeyframe = getFinalKeyframe(options.keyframes, valueTransition);\n        if (finalKeyframe !== undefined) {\n            frame.update(() => {\n                options.onUpdate(finalKeyframe);\n                options.onComplete();\n            });\n            return;\n        }\n    }\n    return valueTransition.isSync\n        ? new JSAnimation(options)\n        : new AsyncMotionValueAnimation(options);\n};\n\nexport { animateMotionValue };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\n\nexport { isTransitionDefined };\n","import { getValueTransition, frame, positionalKeys } from 'motion-dom';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { getOptimisedAppearId } from '../optimized-appear/get-appear-id.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, targetAndTransition, { delay = 0, transitionOverride, type } = {}) {\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = targetAndTransition;\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key, visualElement.latestValues[key] ?? null);\n        const valueTarget = target[key];\n        if (valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = {\n            delay,\n            ...getValueTransition(transition || {}, key),\n        };\n        /**\n         * If the value is already at the defined target, skip the animation.\n         */\n        const currentValue = value.get();\n        if (currentValue !== undefined &&\n            !value.isAnimating &&\n            !Array.isArray(valueTarget) &&\n            valueTarget === currentValue &&\n            !valueTransition.velocity) {\n            continue;\n        }\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        let isHandoff = false;\n        if (window.MotionHandoffAnimation) {\n            const appearId = getOptimisedAppearId(visualElement);\n            if (appearId) {\n                const startTime = window.MotionHandoffAnimation(appearId, key, frame);\n                if (startTime !== null) {\n                    valueTransition.startTime = startTime;\n                    isHandoff = true;\n                }\n            }\n        }\n        addValueToWillChange(visualElement, key);\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && positionalKeys.has(key)\n            ? { type: false }\n            : valueTransition, visualElement, isHandoff));\n        const animation = value.animation;\n        if (animation) {\n            animations.push(animation);\n        }\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            frame.update(() => {\n                transitionEnd && setTarget(visualElement, transitionEnd);\n            });\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    const resolved = resolveVariant(visualElement, variant, options.type === \"exit\"\n        ? visualElement.presenceContext?.custom\n        : undefined);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","import { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nconst numVariantProps = variantProps.length;\nfunction getVariantContext(visualElement) {\n    if (!visualElement)\n        return undefined;\n    if (!visualElement.isControllingVariants) {\n        const context = visualElement.parent\n            ? getVariantContext(visualElement.parent) || {}\n            : {};\n        if (visualElement.props.initial !== undefined) {\n            context.initial = visualElement.props.initial;\n        }\n        return context;\n    }\n    const context = {};\n    for (let i = 0; i < numVariantProps; i++) {\n        const name = variantProps[i];\n        const prop = visualElement.props[name];\n        if (isVariantLabel(prop) || prop === false) {\n            context[name] = prop;\n        }\n    }\n    return context;\n}\n\nexport { getVariantContext };\n","import { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { getVariantContext } from './get-variant-context.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    let state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (type) => (acc, definition) => {\n        const resolved = resolveVariant(visualElement, definition, type === \"exit\"\n            ? visualElement.presenceContext?.custom\n            : undefined);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(changedActiveType) {\n        const { props } = visualElement;\n        const context = getVariantContext(visualElement.parent) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined\n                ? props[type]\n                : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] &&\n                prop !== props[type] &&\n                propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            let handledRemovedValues = false;\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues(type), {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                if (removedKeys.has(key)) {\n                    handledRemovedValues = true;\n                    removedKeys.delete(key);\n                }\n                typeState.needsAnimating[key] = true;\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = false;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                let valueHasChanged = false;\n                if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                    valueHasChanged = !shallowCompare(next, prev);\n                }\n                else {\n                    valueHasChanged = next !== prev;\n                }\n                if (valueHasChanged) {\n                    if (next !== undefined && next !== null) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to skip this animation\n             * unless the inherited variants haven't changed on this render.\n             */\n            const willAnimateViaParent = isInherited && variantDidChange;\n            const needsAnimating = !willAnimateViaParent || handledRemovedValues;\n            if (shouldAnimateType && needsAnimating) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            /**\n             * If the initial prop contains a transition we can use that, otherwise\n             * allow the animation function to use the visual element's default.\n             */\n            if (typeof props.initial !== \"boolean\") {\n                const initialTransition = resolveVariant(visualElement, Array.isArray(props.initial)\n                    ? props.initial[0]\n                    : props.initial);\n                if (initialTransition && initialTransition.transition) {\n                    fallbackAnimation.transition = initialTransition.transition;\n                }\n            }\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = true;\n                // @ts-expect-error - @mattgperry to figure if we should do something here\n                fallbackAnimation[key] = fallbackTarget ?? null;\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            (props.initial === false || props.initial === props.animate) &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive) {\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        visualElement.variantChildren?.forEach((child) => child.animationState?.setActive(type, isActive));\n        state[type].isActive = isActive;\n        const animations = animateChanges(type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n        reset: () => {\n            state = createState();\n            isInitialRender = true;\n        },\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => {\n        visualElement.notify(\"AnimationComplete\", definition);\n    });\n}\n\nexport { animateVisualElement };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent);\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => {\n                onExitComplete(this.id);\n            });\n        }\n    }\n    mount() {\n        const { register, onExitComplete } = this.node.presenceContext || {};\n        if (onExitComplete) {\n            onExitComplete(this.id);\n        }\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        if (isAnimationControls(animate)) {\n            this.unmountControls = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() {\n        this.node.animationState.reset();\n        this.unmountControls?.();\n    }\n}\n\nexport { AnimationFeature };\n","const isDragging = {\n    x: false,\n    y: false,\n};\nfunction isDragActive() {\n    return isDragging.x || isDragging.y;\n}\n\nexport { isDragActive, isDragging };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from 'motion-dom';\n\nfunction extractEventInfo(event) {\n    return {\n        point: {\n            x: event.pageX,\n            y: event.pageY,\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","import { mixNumber } from 'motion-dom';\n\nconst SCALE_PRECISION = 0.0001;\nconst SCALE_MIN = 1 - SCALE_PRECISION;\nconst SCALE_MAX = 1 + SCALE_PRECISION;\nconst TRANSLATE_PRECISION = 0.01;\nconst TRANSLATE_MIN = 0 - TRANSLATE_PRECISION;\nconst TRANSLATE_MAX = 0 + TRANSLATE_PRECISION;\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target, maxDistance) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mixNumber(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    delta.translate =\n        mixNumber(target.min, target.max, delta.origin) - delta.originPoint;\n    if ((delta.scale >= SCALE_MIN && delta.scale <= SCALE_MAX) ||\n        isNaN(delta.scale)) {\n        delta.scale = 1.0;\n    }\n    if ((delta.translate >= TRANSLATE_MIN &&\n        delta.translate <= TRANSLATE_MAX) ||\n        isNaN(delta.translate)) {\n        delta.translate = 0.0;\n    }\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY ||\n        values.skewX ||\n        values.skewY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mixNumber } from 'motion-dom';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\nconst TREE_SCALE_SNAP_MIN = 0.999999999999;\nconst TREE_SCALE_SNAP_MAX = 1.0000000000001;\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const { visualElement } = node.options;\n        if (visualElement &&\n            visualElement.props.style &&\n            visualElement.props.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    if (treeScale.x < TREE_SCALE_SNAP_MAX &&\n        treeScale.x > TREE_SCALE_SNAP_MIN) {\n        treeScale.x = 1.0;\n    }\n    if (treeScale.y < TREE_SCALE_SNAP_MAX &&\n        treeScale.y > TREE_SCALE_SNAP_MIN) {\n        treeScale.y = 1.0;\n    }\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, axisTranslate, axisScale, boxScale, axisOrigin = 0.5) {\n    const originPoint = mixNumber(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, axisTranslate, axisScale, originPoint, boxScale);\n}\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform.x, transform.scaleX, transform.scale, transform.originX);\n    transformAxis(box.y, transform.y, transform.scaleY, transform.scale, transform.originY);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","// Fixes https://github.com/motiondivision/motion/issues/2270\nconst getContextWindow = ({ current }) => {\n    return current ? current.ownerDocument.defaultView : null;\n};\n\nexport { getContextWindow };\n","function isRefObject(ref) {\n    return (ref &&\n        typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { frame, isPrimaryPointer, cancelFrame, frameData } from 'motion-dom';\nimport { pipe, secondsToMilliseconds, millisecondsToSeconds } from 'motion-utils';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint, contextWindow, dragSnapToOrigin = false, } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        /**\n         * @internal\n         */\n        this.contextWindow = window;\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            const { onEnd, onSessionEnd, resumeAnimation } = this.handlers;\n            if (this.dragSnapToOrigin)\n                resumeAnimation && resumeAnimation();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.dragSnapToOrigin = dragSnapToOrigin;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        this.contextWindow = contextWindow || window;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(this.contextWindow, \"pointermove\", this.handlePointerMove), addPointerEvent(this.contextWindow, \"pointerup\", this.handlePointerUp), addPointerEvent(this.contextWindow, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mixNumber } from 'motion-dom';\nimport { progress, clamp } from 'motion-utils';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(min, point, elastic.min)\n            : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(max, point, elastic.max)\n            : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","import { frame, mixNumber, setDragLock, percent } from 'motion-dom';\nimport { invariant } from 'motion-utils';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, rebaseAxisConstraints, calcViewportConstraints, calcOrigin, defaultElastic } from './utils/constraints.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        this.openDragLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            const { dragSnapToOrigin } = this.getProps();\n            // Stop or pause any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            dragSnapToOrigin ? this.pauseAnimation() : this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event).point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openDragLock)\n                    this.openDragLock();\n                this.openDragLock = setDragLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openDragLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                frame.postRender(() => onDragStart(event, info));\n            }\n            addValueToWillChange(this.visualElement, \"transform\");\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openDragLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        const resumeAnimation = () => eachAxis((axis) => this.getAnimationState(axis) === \"paused\" &&\n            this.getAxisMotionValue(axis).animation?.play());\n        const { dragSnapToOrigin } = this.getProps();\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n            resumeAnimation,\n        }, {\n            transformPagePoint: this.visualElement.getTransformPagePoint(),\n            dragSnapToOrigin,\n            contextWindow: getContextWindow(this.visualElement),\n        });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            frame.postRender(() => onDragEnd(event, info));\n        }\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openDragLock) {\n            this.openDragLock();\n            this.openDragLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        const { dragConstraints, dragElastic } = this.getProps();\n        const layout = this.visualElement.projection &&\n            !this.visualElement.projection.layout\n            ? this.visualElement.projection.measure(false)\n            : this.visualElement.projection?.layout;\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.constraints !== false &&\n                    this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        addValueToWillChange(this.visualElement, axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition, this.visualElement, false));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    pauseAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).animation?.pause());\n    }\n    getAnimationState(axis) {\n        return this.getAxisMotionValue(axis).animation?.state;\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = `_drag${axis.toUpperCase()}`;\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial\n                ? props.initial[axis]\n                : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mixNumber(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue && this.constraints !== false) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mixNumber(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints) && dragConstraints.current) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        frame.read(measureDragConstraints);\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { isDragging } from './is-active.mjs';\n\nfunction setDragLock(axis) {\n    if (axis === \"x\" || axis === \"y\") {\n        if (isDragging[axis]) {\n            return null;\n        }\n        else {\n            isDragging[axis] = true;\n            return () => {\n                isDragging[axis] = false;\n            };\n        }\n    }\n    else {\n        if (isDragging.x || isDragging.y) {\n            return null;\n        }\n        else {\n            isDragging.x = isDragging.y = true;\n            return () => {\n                isDragging.x = isDragging.y = false;\n            };\n        }\n    }\n}\n\nexport { setDragLock };\n","import { frame } from 'motion-dom';\nimport { noop } from 'motion-utils';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { PanSession } from './PanSession.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.postRender(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), {\n            transformPagePoint: this.node.getTransformPagePoint(),\n            contextWindow: getContextWindow(this.node),\n        });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.postRender(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","import { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: microtask, cancel: cancelMicrotask } = \n/* @__PURE__ */ createRenderBatcher(queueMicrotask, false);\n\nexport { cancelMicrotask, microtask };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from 'motion-dom';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { complex, mixNumber } from 'motion-dom';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mixNumber(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","import { isCSSVariableName } from 'motion-dom';\n\nconst scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    for (const key in correctors) {\n        scaleCorrectors[key] = correctors[key];\n        if (isCSSVariableName(key)) {\n            scaleCorrectors[key].isCSSVariable = true;\n        }\n    }\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","\"use client\";\nimport { jsx } from 'react/jsx-runtime';\nimport { frame, microtask } from 'motion-dom';\nimport { useContext, Component } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\n\nclass MeasureLayoutWithContext extends Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const { projection } = visualElement;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined ||\n            prevProps.isPresent !== isPresent) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            microtask.postRender(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (jsx(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { isObject } from 'motion-utils';\n\n/**\n * Checks if an element is an SVG element in a way\n * that works across iframes\n */\nfunction isSVGElement(element) {\n    return isObject(element) && \"ownerSVGElement\" in element;\n}\n\nexport { isSVGElement };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from 'motion-utils';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { time, frame, cancelFrame } from 'motion-dom';\nimport { secondsToMilliseconds } from 'motion-utils';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = time.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.setup(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\nfunction delayInSeconds(callback, timeout) {\n    return delay(callback, secondsToMilliseconds(timeout));\n}\n\nexport { delay, delayInSeconds };\n","import { isMotionValue } from 'motion-dom';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    return isMotionValue(value) ? value.get() : value;\n}\n\nexport { resolveMotionValue };\n","import { mixNumber, percent, px } from 'motion-dom';\nimport { progress, circOut, noop } from 'motion-utils';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mixNumber(0, lead.opacity ?? 1, easeCrossfadeIn(progress));\n        target.opacityExit = mixNumber(follow.opacity ?? 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mixNumber(follow.opacity ?? 1, lead.opacity ?? 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mixNumber(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mixNumber(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = /*@__PURE__*/ compress(0, 0.5, circOut);\nconst easeCrossfadeOut = /*@__PURE__*/ compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n/**\n * Reset a delta to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisDeltaInto(delta, originDelta) {\n    delta.translate = originDelta.translate;\n    delta.scale = originDelta.scale;\n    delta.originPoint = originDelta.originPoint;\n    delta.origin = originDelta.origin;\n}\n\nexport { copyAxisDeltaInto, copyAxisInto, copyBoxInto };\n","import { percent, mixNumber } from 'motion-dom';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mixNumber(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mixNumber(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction axisEquals(a, b) {\n    return a.min === b.min && a.max === b.max;\n}\nfunction boxEquals(a, b) {\n    return axisEquals(a.x, b.x) && axisEquals(a.y, b.y);\n}\nfunction axisEqualsRounded(a, b) {\n    return (Math.round(a.min) === Math.round(b.min) &&\n        Math.round(a.max) === Math.round(b.max));\n}\nfunction boxEqualsRounded(a, b) {\n    return axisEqualsRounded(a.x, b.x) && axisEqualsRounded(a.y, b.y);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\nfunction axisDeltaEquals(a, b) {\n    return (a.translate === b.translate &&\n        a.scale === b.scale &&\n        a.originPoint === b.originPoint);\n}\n\nexport { aspectRatio, axisDeltaEquals, axisEquals, axisEqualsRounded, boxEquals, boxEqualsRounded, isDeltaZero };\n","import { addUniqueItem, removeItem } from 'motion-utils';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","import { statsBuffer, isSVGElement, isSVGSVGElement, getValueTransition, cancelFrame, time, frameData, frameSteps, microtask, frame, activeAnimations, motionValue, mixNumber } from 'motion-dom';\nimport { SubscriptionManager, clamp, noop } from 'motion-utils';\nimport { animateSingleValue } from '../../animation/animate/single-value.mjs';\nimport { getOptimisedAppearId } from '../../animation/optimized-appear/get-appear-id.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto, copyAxisDeltaInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcLength, calcRelativePosition, calcRelativeBox, calcBoxDelta, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { boxEqualsRounded, isDeltaZero, axisDeltaEquals, aspectRatio, boxEquals } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { globalProjectionState } from './state.mjs';\n\nconst metrics = {\n    nodes: 0,\n    calculatedTargetDeltas: 0,\n    calculatedProjections: 0,\n};\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\nconst hiddenVisibility = { visibility: \"hidden\" };\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\nfunction resetDistortingTransform(key, visualElement, values, sharedAnimationValues) {\n    const { latestValues } = visualElement;\n    // Record the distorting transform and then temporarily set it to 0\n    if (latestValues[key]) {\n        values[key] = latestValues[key];\n        visualElement.setStaticValue(key, 0);\n        if (sharedAnimationValues) {\n            sharedAnimationValues[key] = 0;\n        }\n    }\n}\nfunction cancelTreeOptimisedTransformAnimations(projectionNode) {\n    projectionNode.hasCheckedOptimisedAppear = true;\n    if (projectionNode.root === projectionNode)\n        return;\n    const { visualElement } = projectionNode.options;\n    if (!visualElement)\n        return;\n    const appearId = getOptimisedAppearId(visualElement);\n    if (window.MotionHasOptimisedAnimation(appearId, \"transform\")) {\n        const { layout, layoutId } = projectionNode.options;\n        window.MotionCancelOptimisedAnimation(appearId, \"transform\", frame, !(layout || layoutId));\n    }\n    const { parent } = projectionNode;\n    if (parent && !parent.hasCheckedOptimisedAppear) {\n        cancelTreeOptimisedTransformAnimations(parent);\n    }\n}\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent?.()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * Store whether this node has been checked for optimised appear animations. As\n             * effects fire bottom-up, and we want to look up the tree for appear animations,\n             * this makes sure we only check each path once, stopping at nodes that\n             * have already been checked.\n             */\n            this.hasCheckedOptimisedAppear = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.scheduleUpdate = () => this.update();\n            this.projectionUpdateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.projectionUpdateScheduled = false;\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                if (statsBuffer.value) {\n                    metrics.nodes =\n                        metrics.calculatedTargetDeltas =\n                            metrics.calculatedProjections =\n                                0;\n                }\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                if (statsBuffer.addProjectionMetrics) {\n                    statsBuffer.addProjectionMetrics(metrics);\n                }\n            };\n            /**\n             * Frame calculations\n             */\n            this.resolvedRelativeTargetAt = 0.0;\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance) && !isSVGSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (this.root.hasTreeAnimated && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeLayoutChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const hasTargetChanged = !this.targetLayout ||\n                        !boxEqualsRounded(this.targetLayout, newLayout);\n                    /*\n                     * Note: Disabled to fix relative animations always triggering new\n                     * layout animations. If this causes further issues, we can try\n                     * a different approach to detecting relative target changes.\n                     */\n                    // || hasRelativeLayoutChanged\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeLayoutChanged;\n                    if (this.options.layoutRoot ||\n                        this.resumeFrom ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (hasTargetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                        /**\n                         * Set animation origin after starting animation to avoid layout jump\n                         * caused by stopping previous layout animation\n                         */\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            this.eventHandlers.clear();\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetSkewAndRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            /**\n             * If we're running optimised appear animations then these must be\n             * cancelled before measuring the DOM. This is so we can measure\n             * the true layout of the element rather than the WAAPI animation\n             * which will be unaffected by the resetSkewAndRotate step.\n             *\n             * Note: This is a DOM write. Worst case scenario is this is sandwiched\n             * between other snapshot reads which will cause unnecessary style recalculations.\n             * This has to happen here though, as we don't yet know which nodes will need\n             * snapshots in startUpdate(), but we only want to cancel optimised animations\n             * if a layout animation measurement is actually going to be affected by them.\n             */\n            if (window.MotionCancelOptimisedAnimation &&\n                !this.hasCheckedOptimisedAppear) {\n                cancelTreeOptimisedTransformAnimations(this);\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating) {\n                this.nodes.forEach(clearIsLayoutDirty);\n            }\n            this.isUpdating = false;\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            /**\n             * Manually flush any pending updates. Ideally\n             * we could leave this to the following requestAnimationFrame but this seems\n             * to leave a flash of incorrectly styled content.\n             */\n            const now = time.now();\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\n            frameData.timestamp = now;\n            frameData.isProcessing = true;\n            frameSteps.update.process(frameData);\n            frameSteps.preRender.process(frameData);\n            frameSteps.render.process(frameData);\n            frameData.isProcessing = false;\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                microtask.read(this.scheduleUpdate);\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            if (!this.projectionUpdateScheduled) {\n                this.projectionUpdateScheduled = true;\n                frame.preRender(this.updateProjection, false, true);\n            }\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n            if (this.snapshot &&\n                !calcLength(this.snapshot.measuredBox.x) &&\n                !calcLength(this.snapshot.measuredBox.y)) {\n                this.snapshot = undefined;\n            }\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement && this.instance) {\n                const isRoot = checkIsScrollRoot(this.instance);\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot,\n                    offset: measureScroll(this.instance),\n                    wasRoot: this.scroll ? this.scroll.isRoot : isRoot,\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty ||\n                this.shouldResetTransform ||\n                this.options.alwaysMeasureLayout;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                this.instance &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            const wasInScrollRoot = this.scroll?.wasRoot || this.path.some(checkNodeWasScrollRoot);\n            if (!wasInScrollRoot) {\n                // Remove viewport scroll to give page-relative coordinates\n                const { scroll } = this.root;\n                if (scroll) {\n                    translateAxis(box.x, scroll.offset.x);\n                    translateAxis(box.y, scroll.offset.y);\n                }\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            if (this.scroll?.wasRoot) {\n                return boxWithoutScroll;\n            }\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.wasRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                this.parent?.isProjectionDirty ||\n                this.attemptToResolveRelativeTarget ||\n                this.root.updateBlockedByResize);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            if (!this.targetDelta && !this.relativeTarget) {\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            if (statsBuffer.value) {\n                metrics.calculatedTargetDeltas++;\n            }\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || this.parent?.isProjectionDirty) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Record previous tree scales before updating.\n             */\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            /**\n             * If this layer needs to perform scale correction but doesn't have a target,\n             * use the layout as the target.\n             */\n            if (lead.layout &&\n                !lead.target &&\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\n                lead.target = lead.layout.layoutBox;\n                lead.targetWithTransforms = createBox();\n            }\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.prevProjectionDelta) {\n                    this.createProjectionDeltas();\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta || !this.prevProjectionDelta) {\n                this.createProjectionDeltas();\n            }\n            else {\n                copyAxisDeltaInto(this.prevProjectionDelta.x, this.projectionDelta.x);\n                copyAxisDeltaInto(this.prevProjectionDelta.y, this.projectionDelta.y);\n            }\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            if (this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY ||\n                !axisDeltaEquals(this.projectionDelta.x, this.prevProjectionDelta.x) ||\n                !axisDeltaEquals(this.projectionDelta.y, this.prevProjectionDelta.y)) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            if (statsBuffer.value) {\n                metrics.calculatedProjections++;\n            }\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            this.options.visualElement?.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        createProjectionDeltas() {\n            this.prevProjectionDelta = createDelta();\n            this.projectionDelta = createDelta();\n            this.projectionDeltaWithTransform = createDelta();\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot ? snapshot.latestValues : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation?.stop();\n            this.resumingFrom?.currentAnimation?.stop();\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                activeAnimations.layout++;\n                this.motionValue || (this.motionValue = motionValue(0));\n                this.currentAnimation = animateSingleValue(this.motionValue, [0, 1000], {\n                    ...options,\n                    velocity: 0,\n                    isSync: true,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onStop: () => {\n                        activeAnimations.layout--;\n                    },\n                    onComplete: () => {\n                        activeAnimations.layout--;\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            const { layoutId } = this.options;\n            return layoutId ? this.getStack()?.lead || this : this;\n        }\n        getPrevLead() {\n            const { layoutId } = this.options;\n            return layoutId ? this.getStack()?.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetSkewAndRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected skew or rotation values, we can early return without a forced render.\n            let hasDistortingTransform = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.z ||\n                latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ ||\n                latestValues.skewX ||\n                latestValues.skewY) {\n                hasDistortingTransform = true;\n            }\n            // If there's no distorting values, we don't need to do any more.\n            if (!hasDistortingTransform)\n                return;\n            const resetValues = {};\n            if (latestValues.z) {\n                resetDistortingTransform(\"z\", visualElement, resetValues, this.animationValues);\n            }\n            // Check the skew and rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                resetDistortingTransform(`rotate${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n                resetDistortingTransform(`skew${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n            }\n            // Force a render of this element to apply the transform with all skews and rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n                if (this.animationValues) {\n                    this.animationValues[key] = resetValues[key];\n                }\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp) {\n            if (!this.instance || this.isSVG)\n                return undefined;\n            if (!this.isVisible) {\n                return hiddenVisibility;\n            }\n            const styles = {\n                visibility: \"\",\n            };\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp?.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp?.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity ??\n                            this.latestValues.opacity ??\n                            1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo, isCSSVariable } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    // If this is a CSS variable, set it directly on the instance.\n                    // Replacing this function from creating styles to setting them\n                    // would be a good place to remove per frame object creation\n                    if (isCSSVariable) {\n                        this.options.visualElement.renderState.vars[key] = corrected;\n                    }\n                    else {\n                        styles[key] = corrected;\n                    }\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp?.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => node.currentAnimation?.stop());\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    const snapshot = node.resumeFrom?.snapshot || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeLayoutChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEqualsRounded(relativeSnapshot, relativeLayout)) {\n                        hasRelativeLayoutChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeLayoutChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    if (statsBuffer.value) {\n        metrics.nodes++;\n    }\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction clearIsLayoutDirty(node) {\n    node.isLayoutDirty = false;\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetSkewAndRotation(node) {\n    node.resetSkewAndRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mixNumber(delta.translate, 0, p);\n    output.scale = mixNumber(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mixNumber(from.min, to.min, p);\n    output.max = mixNumber(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nconst userAgentContains = (string) => typeof navigator !== \"undefined\" &&\n    navigator.userAgent &&\n    navigator.userAgent.toLowerCase().includes(string);\n/**\n * Measured bounding boxes must be rounded in Safari and\n * left untouched in Chrome, otherwise non-integer layouts within scaled-up elements\n * can appear to jump.\n */\nconst roundPoint = userAgentContains(\"applewebkit/\") && !userAgentContains(\"chrome/\")\n    ? Math.round\n    : noop;\nfunction roundAxis(axis) {\n    // Round to the nearest .5 pixels to support subpixel layouts\n    axis.min = roundPoint(axis.min);\n    axis.max = roundPoint(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\nfunction checkNodeWasScrollRoot(node) {\n    return node !== node.root && node.scroll?.wasRoot;\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","import { isSVGElement } from './is-svg-element.mjs';\n\n/**\n * Checks if an element is specifically an SVGSVGElement (the root SVG element)\n * in a way that works across iframes\n */\nfunction isSVGSVGElement(element) {\n    return isSVGElement(element) && element.tagName === \"svg\";\n}\n\nexport { isSVGSVGElement };\n","import { isMotionValue, motionValue } from 'motion-dom';\nimport { animateMotionValue } from '../interfaces/motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    const zTranslate = latestTransform?.z || 0;\n    if (xTranslate || yTranslate || zTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, ${zTranslate}px) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { transformPerspective, rotate, rotateX, rotateY, skewX, skewY } = latestTransform;\n        if (transformPerspective)\n            transform = `perspective(${transformPerspective}px) ${transform}`;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n        if (skewX)\n            transform += `skewX(${skewX}deg) `;\n        if (skewY)\n            transform += `skewY(${skewY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from 'motion-utils';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { resolveElements } from '../../utils/resolve-elements.mjs';\n\nfunction setupGesture(elementOrSelector, options) {\n    const elements = resolveElements(elementOrSelector);\n    const gestureAbortController = new AbortController();\n    const eventOptions = {\n        passive: true,\n        ...options,\n        signal: gestureAbortController.signal,\n    };\n    const cancel = () => gestureAbortController.abort();\n    return [elements, eventOptions, cancel];\n}\n\nexport { setupGesture };\n","import { isDragActive } from './drag/state/is-active.mjs';\nimport { setupGesture } from './utils/setup.mjs';\n\nfunction isValidHover(event) {\n    return !(event.pointerType === \"touch\" || isDragActive());\n}\n/**\n * Create a hover gesture. hover() is different to .addEventListener(\"pointerenter\")\n * in that it has an easier syntax, filters out polyfilled touch events, interoperates\n * with drag gestures, and automatically removes the \"pointerennd\" event listener when the hover ends.\n *\n * @public\n */\nfunction hover(elementOrSelector, onHoverStart, options = {}) {\n    const [elements, eventOptions, cancel] = setupGesture(elementOrSelector, options);\n    const onPointerEnter = (enterEvent) => {\n        if (!isValidHover(enterEvent))\n            return;\n        const { target } = enterEvent;\n        const onHoverEnd = onHoverStart(target, enterEvent);\n        if (typeof onHoverEnd !== \"function\" || !target)\n            return;\n        const onPointerLeave = (leaveEvent) => {\n            if (!isValidHover(leaveEvent))\n                return;\n            onHoverEnd(leaveEvent);\n            target.removeEventListener(\"pointerleave\", onPointerLeave);\n        };\n        target.addEventListener(\"pointerleave\", onPointerLeave, eventOptions);\n    };\n    elements.forEach((element) => {\n        element.addEventListener(\"pointerenter\", onPointerEnter, eventOptions);\n    });\n    return cancel;\n}\n\nexport { hover };\n","import { hover, frame } from 'motion-dom';\nimport { extractEventInfo } from '../events/event-info.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\n\nfunction handleHoverEvent(node, event, lifecycle) {\n    const { props } = node;\n    if (node.animationState && props.whileHover) {\n        node.animationState.setActive(\"whileHover\", lifecycle === \"Start\");\n    }\n    const eventName = (\"onHover\" + lifecycle);\n    const callback = props[eventName];\n    if (callback) {\n        frame.postRender(() => callback(event, extractEventInfo(event)));\n    }\n}\nclass HoverGesture extends Feature {\n    mount() {\n        const { current } = this.node;\n        if (!current)\n            return;\n        this.unmount = hover(current, (_element, startEvent) => {\n            handleHoverEvent(this.node, startEvent, \"Start\");\n            return (endEvent) => handleHoverEvent(this.node, endEvent, \"End\");\n        });\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","const focusableElements = new Set([\n    \"BUTTON\",\n    \"INPUT\",\n    \"SELECT\",\n    \"TEXTAREA\",\n    \"A\",\n]);\nfunction isElementKeyboardAccessible(element) {\n    return (focusableElements.has(element.tagName) ||\n        element.tabIndex !== -1);\n}\n\nexport { isElementKeyboardAccessible };\n","const isPressing = new WeakSet();\n\nexport { isPressing };\n","import { isPressing } from './state.mjs';\n\n/**\n * Filter out events that are not \"Enter\" keys.\n */\nfunction filterEvents(callback) {\n    return (event) => {\n        if (event.key !== \"Enter\")\n            return;\n        callback(event);\n    };\n}\nfunction firePointerEvent(target, type) {\n    target.dispatchEvent(new PointerEvent(\"pointer\" + type, { isPrimary: true, bubbles: true }));\n}\nconst enableKeyboardPress = (focusEvent, eventOptions) => {\n    const element = focusEvent.currentTarget;\n    if (!element)\n        return;\n    const handleKeydown = filterEvents(() => {\n        if (isPressing.has(element))\n            return;\n        firePointerEvent(element, \"down\");\n        const handleKeyup = filterEvents(() => {\n            firePointerEvent(element, \"up\");\n        });\n        const handleBlur = () => firePointerEvent(element, \"cancel\");\n        element.addEventListener(\"keyup\", handleKeyup, eventOptions);\n        element.addEventListener(\"blur\", handleBlur, eventOptions);\n    });\n    element.addEventListener(\"keydown\", handleKeydown, eventOptions);\n    /**\n     * Add an event listener that fires on blur to remove the keydown events.\n     */\n    element.addEventListener(\"blur\", () => element.removeEventListener(\"keydown\", handleKeydown), eventOptions);\n};\n\nexport { enableKeyboardPress };\n","import { isHTMLElement } from '../../utils/is-html-element.mjs';\nimport { isDragActive } from '../drag/state/is-active.mjs';\nimport { isNodeOrChild } from '../utils/is-node-or-child.mjs';\nimport { isPrimaryPointer } from '../utils/is-primary-pointer.mjs';\nimport { setupGesture } from '../utils/setup.mjs';\nimport { isElementKeyboardAccessible } from './utils/is-keyboard-accessible.mjs';\nimport { enableKeyboardPress } from './utils/keyboard.mjs';\nimport { isPressing } from './utils/state.mjs';\n\n/**\n * Filter out events that are not primary pointer events, or are triggering\n * while a Motion gesture is active.\n */\nfunction isValidPressEvent(event) {\n    return isPrimaryPointer(event) && !isDragActive();\n}\n/**\n * Create a press gesture.\n *\n * Press is different to `\"pointerdown\"`, `\"pointerup\"` in that it\n * automatically filters out secondary pointer events like right\n * click and multitouch.\n *\n * It also adds accessibility support for keyboards, where\n * an element with a press gesture will receive focus and\n *  trigger on Enter `\"keydown\"` and `\"keyup\"` events.\n *\n * This is different to a browser's `\"click\"` event, which does\n * respond to keyboards but only for the `\"click\"` itself, rather\n * than the press start and end/cancel. The element also needs\n * to be focusable for this to work, whereas a press gesture will\n * make an element focusable by default.\n *\n * @public\n */\nfunction press(targetOrSelector, onPressStart, options = {}) {\n    const [targets, eventOptions, cancelEvents] = setupGesture(targetOrSelector, options);\n    const startPress = (startEvent) => {\n        const target = startEvent.currentTarget;\n        if (!isValidPressEvent(startEvent))\n            return;\n        isPressing.add(target);\n        const onPressEnd = onPressStart(target, startEvent);\n        const onPointerEnd = (endEvent, success) => {\n            window.removeEventListener(\"pointerup\", onPointerUp);\n            window.removeEventListener(\"pointercancel\", onPointerCancel);\n            if (isPressing.has(target)) {\n                isPressing.delete(target);\n            }\n            if (!isValidPressEvent(endEvent)) {\n                return;\n            }\n            if (typeof onPressEnd === \"function\") {\n                onPressEnd(endEvent, { success });\n            }\n        };\n        const onPointerUp = (upEvent) => {\n            onPointerEnd(upEvent, target === window ||\n                target === document ||\n                options.useGlobalTarget ||\n                isNodeOrChild(target, upEvent.target));\n        };\n        const onPointerCancel = (cancelEvent) => {\n            onPointerEnd(cancelEvent, false);\n        };\n        window.addEventListener(\"pointerup\", onPointerUp, eventOptions);\n        window.addEventListener(\"pointercancel\", onPointerCancel, eventOptions);\n    };\n    targets.forEach((target) => {\n        const pointerDownTarget = options.useGlobalTarget ? window : target;\n        pointerDownTarget.addEventListener(\"pointerdown\", startPress, eventOptions);\n        if (isHTMLElement(target)) {\n            target.addEventListener(\"focus\", (event) => enableKeyboardPress(event, eventOptions));\n            if (!isElementKeyboardAccessible(target) &&\n                !target.hasAttribute(\"tabindex\")) {\n                target.tabIndex = 0;\n            }\n        }\n    });\n    return cancelEvents;\n}\n\nexport { press };\n","import { press, frame } from 'motion-dom';\nimport { extractEventInfo } from '../events/event-info.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\n\nfunction handlePressEvent(node, event, lifecycle) {\n    const { props } = node;\n    if (node.current instanceof HTMLButtonElement && node.current.disabled) {\n        return;\n    }\n    if (node.animationState && props.whileTap) {\n        node.animationState.setActive(\"whileTap\", lifecycle === \"Start\");\n    }\n    const eventName = (\"onTap\" + (lifecycle === \"End\" ? \"\" : lifecycle));\n    const callback = props[eventName];\n    if (callback) {\n        frame.postRender(() => callback(event, extractEventInfo(event)));\n    }\n}\nclass PressGesture extends Feature {\n    mount() {\n        const { current } = this.node;\n        if (!current)\n            return;\n        this.unmount = press(current, (_element, startEvent) => {\n            handlePressEvent(this.node, startEvent, \"Start\");\n            return (endEvent, { success }) => handlePressEvent(this.node, endEvent, success ? \"End\" : \"Cancel\");\n        }, { useGlobalTarget: this.node.props.globalTapTarget });\n    }\n    unmount() { }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","import { pipe } from 'motion-utils';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst MotionContext = /* @__PURE__ */ createContext({});\n\nexport { MotionContext };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        if (instance) {\n            visualState.onMount && visualState.onMount(instance);\n        }\n        if (visualElement) {\n            if (instance) {\n                visualElement.mount(instance);\n            }\n            else {\n                visualElement.unmount();\n            }\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { microtask } from 'motion-dom';\nimport { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../context/SwitchLayoutGroupContext.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement, ProjectionNodeConstructor) {\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef(null);\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    /**\n     * Load Motion gesture and animation features. These are rendered as renderless\n     * components so each feature can optionally make use of React lifecycle methods.\n     */\n    const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n    if (visualElement &&\n        !visualElement.projection &&\n        ProjectionNodeConstructor &&\n        (visualElement.type === \"html\" || visualElement.type === \"svg\")) {\n        createProjectionNode(visualElementRef.current, props, ProjectionNodeConstructor, initialLayoutGroupConfig);\n    }\n    const isMounted = useRef(false);\n    useInsertionEffect(() => {\n        /**\n         * Check the component has already mounted before calling\n         * `update` unnecessarily. This ensures we skip the initial update.\n         */\n        if (visualElement && isMounted.current) {\n            visualElement.update(props, presenceContext);\n        }\n    });\n    /**\n     * Cache this value as we want to know whether HandoffAppearAnimations\n     * was present on initial render - it will be deleted after this.\n     */\n    const optimisedAppearId = props[optimizedAppearDataAttribute];\n    const wantsHandoff = useRef(Boolean(optimisedAppearId) &&\n        !window.MotionHandoffIsComplete?.(optimisedAppearId) &&\n        window.MotionHasOptimisedAnimation?.(optimisedAppearId));\n    useIsomorphicLayoutEffect(() => {\n        if (!visualElement)\n            return;\n        isMounted.current = true;\n        window.MotionIsMounted = true;\n        visualElement.updateFeatures();\n        microtask.render(visualElement.render);\n        /**\n         * Ideally this function would always run in a useEffect.\n         *\n         * However, if we have optimised appear animations to handoff from,\n         * it needs to happen synchronously to ensure there's no flash of\n         * incorrect styles in the event of a hydration error.\n         *\n         * So if we detect a situtation where optimised appear animations\n         * are running, we use useLayoutEffect to trigger animations.\n         */\n        if (wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    useEffect(() => {\n        if (!visualElement)\n            return;\n        if (!wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n        if (wantsHandoff.current) {\n            // This ensures all future calls to animateChanges() in this component will run in useEffect\n            queueMicrotask(() => {\n                window.MotionHandoffMarkAsComplete?.(optimisedAppearId);\n            });\n            wantsHandoff.current = false;\n        }\n    });\n    return visualElement;\n}\nfunction createProjectionNode(visualElement, props, ProjectionNodeConstructor, initialPromotionConfig) {\n    const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, layoutCrossfade, } = props;\n    visualElement.projection = new ProjectionNodeConstructor(visualElement.latestValues, props[\"data-framer-portal-id\"]\n        ? undefined\n        : getClosestProjectingNode(visualElement.parent));\n    visualElement.projection.setOptions({\n        layoutId,\n        layout,\n        alwaysMeasureLayout: Boolean(drag) || (dragConstraints && isRefObject(dragConstraints)),\n        visualElement,\n        /**\n         * TODO: Update options in an effect. This could be tricky as it'll be too late\n         * to update by the time layout animations run.\n         * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n         * ensuring it gets called if there's no potential layout animations.\n         *\n         */\n        animationType: typeof layout === \"string\" ? layout : \"both\",\n        initialPromotionConfig,\n        crossfade: layoutCrossfade,\n        layoutScroll,\n        layoutRoot,\n    });\n}\nfunction getClosestProjectingNode(visualElement) {\n    if (!visualElement)\n        return undefined;\n    return visualElement.options.allowProjection !== false\n        ? visualElement.projection\n        : getClosestProjectingNode(visualElement.parent);\n}\n\nexport { useVisualElement };\n","\"use client\";\nimport { jsxs, jsx } from 'react/jsx-runtime';\nimport { warning, invariant } from 'motion-utils';\nimport { forwardRef, useContext } from 'react';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { featureDefinitions } from './features/definitions.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createRendererMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            useStrictMode(configAndProps, preloadedFeatures);\n            const layoutProjection = getProjectionFunctionality(configAndProps);\n            MeasureLayout = layoutProjection.MeasureLayout;\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement, layoutProjection.ProjectionNode);\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (jsxs(MotionContext.Provider, { value: context, children: [MeasureLayout && context.visualElement ? (jsx(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null, useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)] }));\n    }\n    MotionComponent.displayName = `motion.${typeof Component === \"string\"\n        ? Component\n        : `create(${Component.displayName ?? Component.name ?? \"\"})`}`;\n    const ForwardRefMotionComponent = forwardRef(MotionComponent);\n    ForwardRefMotionComponent[motionComponentSymbol] = Component;\n    return ForwardRefMotionComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\nfunction useStrictMode(configAndProps, preloadedFeatures) {\n    const isStrict = useContext(LazyContext).strict;\n    /**\n     * If we're in development mode, check to make sure we're not rendering a motion component\n     * as a child of LazyMotion, as this will break the file-size benefits of using it.\n     */\n    if (process.env.NODE_ENV !== \"production\" &&\n        preloadedFeatures &&\n        isStrict) {\n        const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n        configAndProps.ignoreStrict\n            ? warning(false, strictMessage)\n            : invariant(false, strictMessage);\n    }\n}\nfunction getProjectionFunctionality(props) {\n    const { drag, layout } = featureDefinitions;\n    if (!drag && !layout)\n        return {};\n    const combined = { ...drag, ...layout };\n    return {\n        MeasureLayout: drag?.isEnabled(props) || layout?.isEnabled(props)\n            ? combined.MeasureLayout\n            : undefined,\n        ProjectionNode: combined.ProjectionNode,\n    };\n}\n\nexport { createRendererMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","import { transformProps } from 'motion-dom';\nimport { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","import { number } from './numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { scale, alpha } from '../numbers/index.mjs';\nimport { degrees, px, progressPercentage } from '../numbers/units.mjs';\n\nconst transformValueTypes = {\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n};\n\nexport { transformValueTypes };\n","import { int } from '../int.mjs';\nimport { alpha } from '../numbers/index.mjs';\nimport { px } from '../numbers/units.mjs';\nimport { transformValueTypes } from './transform.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Misc\n    backgroundPositionX: px,\n    backgroundPositionY: px,\n    ...transformValueTypes,\n    zIndex: int,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { transformPropOrder, getValueAsType, numberValueTypes } from 'motion-dom';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(latestValues, transform, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    let transformIsDefault = true;\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        const value = latestValues[key];\n        if (value === undefined)\n            continue;\n        let valueIsDefault = true;\n        if (typeof value === \"number\") {\n            valueIsDefault = value === (key.startsWith(\"scale\") ? 1 : 0);\n        }\n        else {\n            valueIsDefault = parseFloat(value) === 0;\n        }\n        if (!valueIsDefault || transformTemplate) {\n            const valueAsType = getValueAsType(value, numberValueTypes[key]);\n            if (!valueIsDefault) {\n                transformIsDefault = false;\n                const transformName = translateAlias[key] || key;\n                transformString += `${transformName}(${valueAsType}) `;\n            }\n            if (transformTemplate) {\n                transform[key] = valueAsType;\n            }\n        }\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","import { transformProps, isCSSVariableName, getValueAsType, numberValueTypes } from 'motion-dom';\nimport { buildTransform } from './build-transform.mjs';\n\nfunction buildHTMLStyles(state, latestValues, transformTemplate) {\n    const { style, vars, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept separately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            continue;\n        }\n        else if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        else {\n            // Convert the value to its default value type, ie 0 -> \"0px\"\n            const valueAsType = getValueAsType(value, numberValueTypes[key]);\n            if (key.startsWith(\"origin\")) {\n                // If this is a transform origin, flag and enable further transform-origin processing\n                hasTransformOrigin = true;\n                transformOrigin[key] =\n                    valueAsType;\n            }\n            else {\n                style[key] = valueAsType;\n            }\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(latestValues, state.transform, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { isMotionValue } from 'motion-dom';\nimport { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState));\n    return style;\n}\nfunction useHTMLProps(props, visualState) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","import { px } from 'motion-dom';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, isSVGTag, transformTemplate, styleProp) {\n    buildHTMLStyles(state, latest, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style } = state;\n    /**\n     * However, we apply transforms as CSS transforms.\n     * So if we detect a transform, transformOrigin we take it from attrs and copy it into style.\n     */\n    if (attrs.transform) {\n        style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    if (style.transform || attrs.transformOrigin) {\n        style.transformOrigin = attrs.transformOrigin ?? \"50% 50%\";\n        delete attrs.transformOrigin;\n    }\n    if (style.transform) {\n        /**\n         * SVG's element transform-origin uses its own median as a reference.\n         * Therefore, transformBox becomes a fill-box\n         */\n        style.transformBox = styleProp?.transformBox ?? \"fill-box\";\n        delete attrs.transformBox;\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, isSVGTag(Component), props.transformTemplate, props.style);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"custom\",\n    \"inherit\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"globalTapTarget\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        key.startsWith(\"onLayout\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (typeof isValidProp !== \"function\")\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] &&\n                key.startsWith(\"onDrag\"))) {\n            filteredProps[key] =\n                props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","/**\n * We keep these listed separately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/u.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","import { isMotionValue } from 'motion-dom';\nimport { Fragment, useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = Component !== Fragment\n            ? { ...filteredProps, ...visualProps, ref }\n            : {};\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        for (let i = 0; i < list.length; i++) {\n            const resolved = resolveVariantFromProps(props, list[i]);\n            if (resolved) {\n                const { transitionEnd, transition, ...target } = resolved;\n                for (const key in target) {\n                    let valueTarget = target[key];\n                    if (Array.isArray(valueTarget)) {\n                        /**\n                         * Take final keyframe if the initial animation is blocked because\n                         * we want to initialise at the end of that blocked animation.\n                         */\n                        const index = isInitialAnimationBlocked\n                            ? valueTarget.length - 1\n                            : 0;\n                        valueTarget = valueTarget[index];\n                    }\n                    if (valueTarget !== null) {\n                        values[key] = valueTarget;\n                    }\n                }\n                for (const key in transitionEnd) {\n                    values[key] = transitionEnd[key];\n                }\n            }\n        }\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { isMotionValue } from 'motion-dom';\nimport { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style &&\n                isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props) ||\n            visualElement?.getValue(key)?.liveStyle !== undefined) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","import { isMotionValue, transformPropOrder } from 'motion-dom';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps, visualElement);\n    for (const key in props) {\n        if (isMotionValue(props[key]) ||\n            isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n    }),\n};\n\nexport { svgMotionConfig };\n","import { createRendererMotionComponent } from '../../motion/index.mjs';\nimport { createUseRender } from '../dom/use-render.mjs';\nimport { isSVGComponent } from '../dom/utils/is-svg-component.mjs';\nimport { htmlMotionConfig } from '../html/config-motion.mjs';\nimport { svgMotionConfig } from '../svg/config-motion.mjs';\n\nfunction createMotionComponentFactory(preloadedFeatures, createVisualElement) {\n    return function createMotionComponent(Component, { forwardMotionProps } = { forwardMotionProps: false }) {\n        const baseConfig = isSVGComponent(Component)\n            ? svgMotionConfig\n            : htmlMotionConfig;\n        const config = {\n            ...baseConfig,\n            preloadedFeatures,\n            useRender: createUseRender(forwardMotionProps),\n            createVisualElement,\n            Component,\n        };\n        return createRendererMotionComponent(config);\n    };\n}\n\nexport { createMotionComponentFactory };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { auto } from './auto.mjs';\nimport { number } from './numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from './numbers/units.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)$/u.test(v);\n\nexport { isNumericalString };\n","import { invariant, isNumericalString } from 'motion-utils';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = \n// eslint-disable-next-line redos-detector/no-unsafe-regex -- false positive, as it can match a lot of words\n/^var\\(--(?:([\\w-]+)|([\\w-]+), ?([a-zA-Z\\d ()%#.,-]+))\\)/u;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token1, token2, fallback] = match;\n    return [`--${token1 ?? token2}`, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        const trimmed = resolved.trim();\n        return isNumericalString(trimmed) ? parseFloat(trimmed) : trimmed;\n    }\n    return isCSSVariableToken(fallback)\n        ? getVariableValue(fallback, element, depth + 1)\n        : fallback;\n}\n\nexport { getVariableValue, parseCSSVariable };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/u.test(v);\n\nexport { isZeroValueString };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils/float-regex.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /\\b([a-z-]*)\\(.*?\\)/gu;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../color/index.mjs';\nimport { filter } from '../complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../complex/index.mjs';\nimport { filter } from '../complex/filter.mjs';\nimport { getDefaultValueType } from '../maps/defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","import { analyseComplexValue } from '../../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../../../value/types/utils/animatable-none.mjs';\n\n/**\n * If we encounter keyframes like \"none\" or \"0\" and we also have keyframes like\n * \"#fff\" or \"200px 200px\" we want to find a keyframe to serve as a template for\n * the \"none\" keyframes. In this case \"#fff\" or \"200px 200px\" - then these get turned into\n * zero equivalents, i.e. \"#fff0\" or \"0px 0px\".\n */\nconst invalidTemplates = new Set([\"auto\", \"none\", \"0\"]);\nfunction makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name) {\n    let i = 0;\n    let animatableTemplate = undefined;\n    while (i < unresolvedKeyframes.length && !animatableTemplate) {\n        const keyframe = unresolvedKeyframes[i];\n        if (typeof keyframe === \"string\" &&\n            !invalidTemplates.has(keyframe) &&\n            analyseComplexValue(keyframe).values.length) {\n            animatableTemplate = unresolvedKeyframes[i];\n        }\n        i++;\n    }\n    if (animatableTemplate && name) {\n        for (const noneIndex of noneKeyframeIndexes) {\n            unresolvedKeyframes[noneIndex] = getAnimatableNone(name, animatableTemplate);\n        }\n    }\n}\n\nexport { makeNoneKeyframesAnimatable };\n","import { positionalKeys } from '../../render/utils/keys-position.mjs';\nimport { findDimensionValueType } from '../../value/types/dimensions.mjs';\nimport { getVariableValue } from '../utils/css-variables-conversion.mjs';\nimport { isCSSVariableToken } from '../utils/is-css-variable.mjs';\nimport { KeyframeResolver } from './KeyframesResolver.mjs';\nimport { isNone } from './utils/is-none.mjs';\nimport { makeNoneKeyframesAnimatable } from './utils/make-none-animatable.mjs';\nimport { isNumOrPxType, positionalValues } from './utils/unit-conversion.mjs';\n\nclass DOMKeyframesResolver extends KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element) {\n        super(unresolvedKeyframes, onComplete, name, motionValue, element, true);\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, element, name } = this;\n        if (!element || !element.current)\n            return;\n        super.readKeyframes();\n        /**\n         * If any keyframe is a CSS variable, we need to find its value by sampling the element\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            let keyframe = unresolvedKeyframes[i];\n            if (typeof keyframe === \"string\") {\n                keyframe = keyframe.trim();\n                if (isCSSVariableToken(keyframe)) {\n                    const resolved = getVariableValue(keyframe, element.current);\n                    if (resolved !== undefined) {\n                        unresolvedKeyframes[i] = resolved;\n                    }\n                    if (i === unresolvedKeyframes.length - 1) {\n                        this.finalKeyframe = keyframe;\n                    }\n                }\n            }\n        }\n        /**\n         * Resolve \"none\" values. We do this potentially twice - once before and once after measuring keyframes.\n         * This could be seen as inefficient but it's a trade-off to avoid measurements in more situations, which\n         * have a far bigger performance impact.\n         */\n        this.resolveNoneKeyframes();\n        /**\n         * Check to see if unit type has changed. If so schedule jobs that will\n         * temporarily set styles to the destination keyframes.\n         * Skip if we have more than two keyframes or this isn't a positional value.\n         * TODO: We can throw if there are multiple keyframes and the value type changes.\n         */\n        if (!positionalKeys.has(name) || unresolvedKeyframes.length !== 2) {\n            return;\n        }\n        const [origin, target] = unresolvedKeyframes;\n        const originType = findDimensionValueType(origin);\n        const targetType = findDimensionValueType(target);\n        /**\n         * Either we don't recognise these value types or we can animate between them.\n         */\n        if (originType === targetType)\n            return;\n        /**\n         * If both values are numbers or pixels, we can animate between them by\n         * converting them to numbers.\n         */\n        if (isNumOrPxType(originType) && isNumOrPxType(targetType)) {\n            for (let i = 0; i < unresolvedKeyframes.length; i++) {\n                const value = unresolvedKeyframes[i];\n                if (typeof value === \"string\") {\n                    unresolvedKeyframes[i] = parseFloat(value);\n                }\n            }\n        }\n        else if (positionalValues[name]) {\n            /**\n             * Else, the only way to resolve this is by measuring the element.\n             */\n            this.needsMeasurement = true;\n        }\n    }\n    resolveNoneKeyframes() {\n        const { unresolvedKeyframes, name } = this;\n        const noneKeyframeIndexes = [];\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (unresolvedKeyframes[i] === null ||\n                isNone(unresolvedKeyframes[i])) {\n                noneKeyframeIndexes.push(i);\n            }\n        }\n        if (noneKeyframeIndexes.length) {\n            makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name);\n        }\n    }\n    measureInitialState() {\n        const { element, unresolvedKeyframes, name } = this;\n        if (!element || !element.current)\n            return;\n        if (name === \"height\") {\n            this.suspendedScrollY = window.pageYOffset;\n        }\n        this.measuredOrigin = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        unresolvedKeyframes[0] = this.measuredOrigin;\n        // Set final key frame to measure after next render\n        const measureKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n        if (measureKeyframe !== undefined) {\n            element.getValue(name, measureKeyframe).jump(measureKeyframe, false);\n        }\n    }\n    measureEndState() {\n        const { element, name, unresolvedKeyframes } = this;\n        if (!element || !element.current)\n            return;\n        const value = element.getValue(name);\n        value && value.jump(this.measuredOrigin, false);\n        const finalKeyframeIndex = unresolvedKeyframes.length - 1;\n        const finalKeyframe = unresolvedKeyframes[finalKeyframeIndex];\n        unresolvedKeyframes[finalKeyframeIndex] = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        if (finalKeyframe !== null && this.finalKeyframe === undefined) {\n            this.finalKeyframe = finalKeyframe;\n        }\n        // If we removed transform values, reapply them before the next render\n        if (this.removedTransforms?.length) {\n            this.removedTransforms.forEach(([unsetTransformName, unsetTransformValue]) => {\n                element\n                    .getValue(unsetTransformName)\n                    .set(unsetTransformValue);\n            });\n        }\n        this.resolveNoneKeyframes();\n    }\n}\n\nexport { DOMKeyframesResolver };\n","import { isZeroValueString } from 'motion-utils';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n    else {\n        return true;\n    }\n}\n\nexport { isNone };\n","import { color } from '../color/index.mjs';\nimport { complex } from '../complex/index.mjs';\nimport { dimensionValueTypes } from '../dimensions.mjs';\nimport { testValueType } from '../test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { KeyframeResolver, time, frame, isMotionValue, cancelFrame, transformProps, motionValue, findValueType, complex, getAnimatableNone } from 'motion-dom';\nimport { warnOnce, isNumericalString, isZeroValueString, SubscriptionManager } from 'motion-utils';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { visualElementStore } from './store.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\n\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps, _visualElement) {\n        return {};\n    }\n    constructor({ parent, props, presenceContext, reducedMotionConfig, blockInitialAnimation, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        this.KeyframeResolver = KeyframeResolver;\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.renderScheduledAt = 0.0;\n        this.scheduleRender = () => {\n            const now = time.now();\n            if (this.renderScheduledAt < now) {\n                this.renderScheduledAt = now;\n                frame.render(this.render, false, true);\n            }\n        };\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.blockInitialAnimation = Boolean(blockInitialAnimation);\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't necessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {}, this);\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n            }\n        }\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.valueSubscriptions.clear();\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature) {\n                feature.unmount();\n                feature.isMounted = false;\n            }\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        if (this.valueSubscriptions.has(key)) {\n            this.valueSubscriptions.get(key)();\n        }\n        const valueIsTransform = transformProps.has(key);\n        if (valueIsTransform && this.onBindTransform) {\n            this.onBindTransform();\n        }\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate && frame.preRender(this.notifyUpdate);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        let removeSyncCheck;\n        if (window.MotionCheckAppearSync) {\n            removeSyncCheck = window.MotionCheckAppearSync(this, key, value);\n        }\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n            if (removeSyncCheck)\n                removeSyncCheck();\n            if (value.owner)\n                value.stop();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    updateFeatures() {\n        let key = \"animation\";\n        for (key in featureDefinitions) {\n            const featureDefinition = featureDefinitions[key];\n            if (!featureDefinition)\n                continue;\n            const { isEnabled, Feature: FeatureConstructor } = featureDefinition;\n            /**\n             * If this feature is enabled but not active, make a new instance.\n             */\n            if (!this.features[key] &&\n                FeatureConstructor &&\n                isEnabled(this.props)) {\n                this.features[key] = new FeatureConstructor(this);\n            }\n            /**\n             * If we have a feature, mount or update it.\n             */\n            if (this.features[key]) {\n                const feature = this.features[key];\n                if (feature.isMounted) {\n                    feature.update();\n                }\n                else {\n                    feature.mount();\n                    feature.isMounted = true;\n                }\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listenerName = (\"on\" + key);\n            const listener = props[listenerName];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps, this), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        const existingValue = this.values.get(key);\n        if (value !== existingValue) {\n            if (existingValue)\n                this.removeValue(key);\n            this.bindToMotionValue(key, value);\n            this.values.set(key, value);\n            this.latestValues[key] = value.get();\n        }\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue === null ? undefined : defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key, target) {\n        let value = this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : this.getBaseTargetFromProps(this.props, key) ??\n                this.readValueFromInstance(this.current, key, this.options);\n        if (value !== undefined && value !== null) {\n            if (typeof value === \"string\" &&\n                (isNumericalString(value) || isZeroValueString(value))) {\n                // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n                value = parseFloat(value);\n            }\n            else if (!findValueType(value) && complex.test(target)) {\n                value = getAnimatableNone(key, target);\n            }\n            this.setBaseTarget(key, isMotionValue(value) ? value.get() : value);\n        }\n        return isMotionValue(value) ? value.get() : value;\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        const { initial } = this.props;\n        let valueFromInitial;\n        if (typeof initial === \"string\" || typeof initial === \"object\") {\n            const variant = resolveVariantFromProps(this.props, initial, this.presenceContext?.custom);\n            if (variant) {\n                valueFromInitial = variant[key];\n            }\n        }\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isMotionValue, motionValue } from 'motion-dom';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                if (existingValue.liveStyle === true) {\n                    existingValue.jump(nextValue);\n                }\n                else if (!existingValue.hasAnimated) {\n                    existingValue.set(nextValue);\n                }\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { DOMKeyframesResolver, isMotionValue } from 'motion-dom';\nimport { VisualElement } from '../VisualElement.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    constructor() {\n        super(...arguments);\n        this.KeyframeResolver = DOMKeyframesResolver;\n    }\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style\n            ? props.style[key]\n            : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current) {\n                    this.current.textContent = `${latest}`;\n                }\n            });\n        }\n    }\n}\n\nexport { DOMVisualElement };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","import { transformProps, defaultTransformValue, readTransformValue, isCSSVariableName } from 'motion-dom';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"html\";\n        this.renderInstance = renderHTML;\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            return this.projection?.isProjecting\n                ? defaultTransformValue(key)\n                : readTransformValue(instance, key);\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, props) {\n        buildHTMLStyles(renderState, latestValues, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { transformProps, getDefaultValueType } from 'motion-dom';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"svg\";\n        this.isSVGTag = false;\n        this.measureInstanceViewportBox = createBox;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n    build(renderState, latestValues, props) {\n        buildSVGAttrs(renderState, latestValues, this.isSVGTag, props.transformTemplate, props.style);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { Fragment } from 'react';\nimport { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options)\n        : new HTMLVisualElement(options, {\n            allowProjection: Component !== Fragment,\n        });\n};\n\nexport { createDomVisualElement };\n","import { createDOMMotionComponentProxy } from '../create-proxy.mjs';\nimport { createMotionComponent } from './create.mjs';\n\nconst motion = /*@__PURE__*/ createDOMMotionComponentProxy(createMotionComponent);\n\nexport { motion };\n","import { animations } from '../../../motion/features/animations.mjs';\nimport { drag } from '../../../motion/features/drag.mjs';\nimport { gestureAnimations } from '../../../motion/features/gestures.mjs';\nimport { layout } from '../../../motion/features/layout.mjs';\nimport { createMotionComponentFactory } from '../create-factory.mjs';\nimport { createDomVisualElement } from '../../dom/create-visual-element.mjs';\n\nconst createMotionComponent = /*@__PURE__*/ createMotionComponentFactory({\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n}, createDomVisualElement);\n\nexport { createMotionComponent };\n","function resolveElements(elementOrSelector, scope, selectorCache) {\n    if (elementOrSelector instanceof EventTarget) {\n        return [elementOrSelector];\n    }\n    else if (typeof elementOrSelector === \"string\") {\n        let root = document;\n        if (scope) {\n            root = scope.current;\n        }\n        const elements = selectorCache?.[elementOrSelector] ??\n            root.querySelectorAll(elementOrSelector);\n        return elements ? Array.from(elements) : [];\n    }\n    return Array.from(elementOrSelector);\n}\n\nexport { resolveElements };\n"],"names":["createDOMMotionComponentProxy","componentFactory","Proxy","componentCache","Map","arguments","get","_target","key","has","set","isAnimationControls","v","start","getValueState","visualElement","state","values","forEach","value","getVelocity","resolveVariantFromProps","props","definition","custom","current","velocity","undefined","variants","resolveVariant","getProps","getValueTransition","transition","_ref","_transition$key","noop","any","MotionGlobalConfig","stepsOrder","statsBuffer","addProjectionMetrics","createRenderBatcher","scheduleNextBatch","allowKeepAlive","runNextFrame","useDefaultElapsed","delta","timestamp","isProcessing","flagRunNextFrame","steps","reduce","acc","stepName","thisFrame","Set","nextFrame","flushNextFrame","toKeepAlive","WeakSet","latestFrameData","numCalls","triggerCallback","callback","step","schedule","queue","length","add","cancel","delete","process","frameData","frameloop","push","clear","createRenderStep","setup","read","resolveKeyframes","preUpdate","update","preRender","render","postRender","processBatch","useManualTiming","performance","now","Math","max","min","keepAlive","immediate","i","frame","cancelFrame","frameSteps","requestAnimationFrame","transformPropOrder","transformProps","positionalKeys","addUniqueItem","arr","item","indexOf","removeItem","index","splice","SubscriptionManager","constructor","this","subscriptions","handler","notify","a","b","c","numSubscriptions","getSize","velocityPerSecond","frameDuration","clearTime","time","newTime","queueMicrotask","collectMotionValues","MotionValue","init","_this","options","canTrackVelocity","events","updateAndNotify","currentTime","_this$events$change","_this$events$renderRe","updatedAt","setPrevFrameValue","prev","setCurrent","change","dependents","dependent","dirty","renderRequest","hasAnimated","owner","isNaN","parseFloat","prevFrameValue","prevUpdatedAt","onChange","subscription","on","eventName","unsubscribe","stop","clearListeners","eventManagers","attach","passiveEffect","stopPassiveEffect","setWithVelocity","jump","endAnimation","_this$events$change2","addDependent","removeDependent","getPrevious","startAnimation","Promise","resolve","animation","animationStart","then","animationComplete","clearAnimation","animationCancel","isAnimating","destroy","_this$dependents","_this$events$destroy","motionValue","isKeyframesTarget","Array","isArray","setMotionValue","hasValue","getValue","addValue","isMotionValue","Boolean","addValueToWillChange","willChange","WillChange","newWillChange","camelToDash","str","replace","toLowerCase","optimizedAppearDataAttribute","getOptimisedAppearId","combineFunctions","pipe","_len","transformers","_key","clamp","secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds","activeAnimations","layout","mainThread","waapi","checkStringStartsWith","token","startsWith","isCSSVariableName","startsAsVariableToken","isCSSVariableToken","singleCssVariableRegex","test","split","trim","number","parse","transform","alpha","_objectSpread","scale","default","sanitize","round","floatRegex","singleColorRegex","isColorString","type","testProp","isNullish","Object","prototype","hasOwnProperty","call","splitColor","aName","bName","cName","match","rgbUnit","clampRgbUnit","rgba","red","green","blue","alpha$1","hex","r","g","substring","parseInt","createUnitType","unit","endsWith","concat","degrees","percent","px","vh","vw","progressPercentage","hsla","hue","saturation","lightness","color","getAnimatableNone","parsed","colorRegex","NUMBER_TOKEN","COLOR_TOKEN","complexRegex","analyseComplexValue","originalValue","toString","indexes","var","types","parsedValue","parseComplexValue","createTransformer","source","numSections","output","convertNumbersToZero","complex","_v$match","_v$match2","transformer","map","hueToRgb","p","q","t","mixImmediate","mixNumber","from","to","progress","mixLinearColor","fromExpo","expo","sqrt","colorTypes","asRGBA","find","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","invisibleValues","mixNumber$1","getMixer","mixComplex","mixArray","mixObject","numValues","blendValue","origin","target","template","originStats","targetStats","mixVisibility","orderedOrigin","pointers","_origin$values$origin","originIndex","originValue","matchOrder","mix","mixer","frameloopDriver","passTimestamp","generateLinearEasing","easing","duration","resolution","points","numPoints","maxGeneratorDuration","calcGeneratorDuration","generator","next","done","Infinity","calcGeneratorVelocity","resolveValue","prevT","springDefaults","stiffness","damping","mass","bounce","visualDuration","restSpeed","granular","restDelta","minDuration","maxDuration","minDamping","maxDamping","safeMin","findSpring","envelope","derivative","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","exp","d","e","pow","f","initialGuess","result","rootIterations","approximateRoot","durationKeys","physicsKeys","isSpringType","keys","some","spring","optionsOrVisualDuration","keyframes","isResolvedFromDuration","springOptions","root","PI","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","abs","resolveSpring","angularFreq","sin","cos","dampedAngularFreq","freqForT","sinh","cosh","calculatedDuration","currentVelocity","isBelowVelocityThreshold","isBelowDisplacementThreshold","toTransition","inertia","power","timeConstant","bounceDamping","bounceStiffness","modifyTarget","nearestBoundary","amplitude","ideal","calcDelta","calcLatest","applyFriction","latest","timeReachedBoundary","spring$1","checkCatchBoundary","hasUpdatedFrame","applyToOptions","generatorOptions","ease","createGeneratorEasing","calcBezier","a1","a2","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","x","lowerBound","upperBound","currentX","currentT","binarySubdivide","easeIn","easeOut","easeInOut","mirrorEasing","reverseEasing","backOut","backIn","backInOut","anticipate","circIn","acos","circOut","circInOut","isBezierDefinition","easingLookup","linear","easingDefinitionToFunction","x1","y1","x2","y2","toFromDifference","interpolate","input","isClamp","inputLength","isZeroDeltaRange","reverse","mixers","customMixer","mixerFactory","numMixers","easingFunction","createMixers","interpolator","progressInRange","defaultOffset","offset","remaining","offsetProgress","fillOffset","keyframeValues","times","easingFunctions","isEasingArray","absoluteTimes","o","convertOffsetToTimes","mapTimeToKeyframe","isNotNull","getFinalKeyframe","finalKeyframe","repeat","repeatType","speed","resolvedKeyframes","filter","transitionTypeMap","decay","tween","replaceTransitionType","WithPromise","updateFinished","finished","_finished","notifyFinished","onResolve","onReject","percentToProgress","JSAnimation","super","startTime","isStopped","holdTime","playbackSpeed","_this$options$onStop","_this$options","tick","teardown","onStop","initAnimation","play","autoplay","pause","repeatDelay","keyframes$1","generatorFactory","mixKeyframes","mirroredGenerator","resolvedDuration","totalDuration","updateTime","animationTime","sample","delay","onUpdate","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","floor","iterationProgress","isAnimationFinished","finish","reject","_this$driver","driver","newSpeed","hasChanged","_this$options$onPlay","_this$options2","onPlay","complete","_this$options$onCompl","_this$options3","onComplete","_this$options$onCance","_this$options4","onCancel","stopDriver","sampleTime","attachTimeline","timeline","_this$driver2","allowFlatten","observe","radToDeg","rad","rotate","angle","atan2","rebaseAngle","matrix2dParsers","y","translateX","translateY","scaleX","scaleY","rotateZ","skewX","atan","skewY","skew","matrix3dParsers","z","translateZ","rotateX","rotateY","defaultTransformValue","name","includes","parseValueFromTransform","matrix3dMatch","parsers","matrix2dMatch","valueParser","convertTransformToNumber","isNumOrPxType","transformKeys","nonTranslationalTransformKeys","positionalValues","width","_ref2","paddingLeft","paddingRight","height","_ref3","_ref4","paddingTop","paddingBottom","top","_bbox","_ref5","left","_ref6","bottom","_ref7","_ref8","right","_ref9","_ref0","_ref1","_ref10","toResolve","isScheduled","anyNeedsMeasurement","isForced","measureAllKeyframes","resolversToMeasure","resolver","needsMeasurement","elementsToMeasure","element","transformsToRestore","removedTransforms","removeNonTranslationalTransform","measureInitialState","restore","_element$getValue","measureEndState","suspendedScrollY","window","scrollTo","readAllKeyframes","readKeyframes","KeyframeResolver","unresolvedKeyframes","isAsync","scheduleResolve","currentValue","valueAsRead","readValue","_keyframes$i","fillWildcards","setFinalKeyframe","renderEndStyles","isForcedComplete","resume","memo","supportsScrollTimeline","ScrollTimeline","supportsFlags","memoSupports","supportsFlag","memoized","_supportsFlags$suppor","supportsLinearEasing","document","createElement","animate","opacity","cubicBezierAsString","supportedWaapiEasing","mapEasingToNativeEasing","segmentEasing","startWaapiAnimation","valueName","pseudoElement","keyframeOptions","fill","iterations","direction","finally","isGenerator","NativeAnimation","finishedTime","isPseudoElement","_objectWithoutProperties","_excluded","_options$duration","_options$ease","applyGeneratorOptions","onfinish","keyframe","updateMotionValue","isCSSVar","style","setProperty","setStyle","_this$animation$finis","_this$animation","commitStyles","_this$animation$commi","_this$animation2","_this$animation$effec","_this$animation$effec2","effect","getComputedTiming","Number","playbackRate","playState","newStartTime","_this$animation$effec3","updateTiming","unsupportedEasingFunctions","replaceStringEasing","NativeAnimationExtended","_this$finishedTime","sampleAnimation","isAnimatable","acceleratedValues","supportsWaapi","Element","AsyncMotionValueAnimation","_this$keyframeResolve2","_this$keyframeResolve","_this$stopTimeline","_animation","stopTimeline","keyframeResolver","createdAt","optionsWithDefaults","KeyframeResolver$1","forced","onKeyframesResolved","sync","isHandoff","resolvedAt","originKeyframe","targetKeyframe","isOriginAnimatable","isTargetAnimatable","hasKeyframesChanged","canAnimate","instantAnimations","resolvedOptions","_motionValue$owner","isHTMLElement","transformTemplate","supportsBrowserAnimation","catch","pendingTimeline","_onReject","_this$keyframeResolve3","_this$keyframeResolve4","underDampedSpring","keyframesTransition","getDefaultTransition","valueKey","animateMotionValue","valueTransition","when","_delay","delayChildren","staggerChildren","staggerDirection","isTransitionDefined","assign","shouldSkip","skipAnimations","isSync","shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","animateTarget","targetAndTransition","transitionOverride","transitionEnd","animations","animationTypeState","animationState","getState","_visualElement$latest","latestValues","valueTarget","MotionHandoffAnimation","appearId","shouldReduceMotion","all","setTarget","animateVariant","variant","_visualElement$presen","resolved","presenceContext","getAnimation","getChildAnimations","variantChildren","size","forwardDelay","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","child","animateChildren","first","last","sortNodePosition","shallowCompare","prevLength","isVariantLabel","variantPriorityOrder","variantProps","numVariantProps","getVariantContext","isControllingVariants","context","parent","initial","prop","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createState","isInitialRender","buildResolvedTypeValues","animateChanges","changedActiveType","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isActive","isInherited","manuallyAnimateOnMount","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","handledRemovedValues","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","liveStyle","valueHasChanged","blockInitialAnimation","fallbackAnimation","initialTransition","fallbackTarget","getBaseTarget","shouldAnimate","setActive","_visualElement$varian","_child$animationState","setAnimateFunction","makeAnimator","reset","createTypeState","whileInView","whileHover","whileTap","whileDrag","whileFocus","exit","Feature","node","isMounted","id","updateAnimationControlsSubscription","unmountControls","subscribe","mount","prevAnimate","prevProps","unmount","_this$unmountControls","isPresent","onExitComplete","prevIsPresent","prevPresenceContext","exitAnimation","register","isDragging","isDragActive","addDomEvent","passive","addEventListener","removeEventListener","isPrimaryPointer","event","pointerType","button","isPrimary","extractEventInfo","point","pageX","pageY","addPointerEvent","addPointerInfo","convertBoundingBoxToBox","calcLength","axis","calcAxisDelta","originPoint","translate","calcBoxDelta","originX","originY","calcRelativeAxis","relative","calcRelativeAxisPosition","calcRelativePosition","createBox","eachAxis","isIdentityScale","hasScale","hasTransform","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","TREE_SCALE_SNAP_MIN","TREE_SCALE_SNAP_MAX","translateAxis","distance","transformAxis","axisTranslate","axisScale","axisOrigin","transformBox","measureViewportBox","instance","transformPoint","topLeft","bottomRight","transformBoxPoints","getBoundingClientRect","getContextWindow","ownerDocument","defaultView","isRefObject","ref","PanSession","handlers","transformPagePoint","contextWindow","dragSnapToOrigin","startEvent","lastMoveEvent","lastMoveEventInfo","updatePoint","info","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","onStart","onMove","handlePointerMove","handlePointerUp","end","onEnd","onSessionEnd","resumeAnimation","panInfo","initialInfo","onSessionStart","removeListeners","updateHandlers","subtractPoint","lastDevicePoint","startDevicePoint","timeDelta","timestampedPoint","lastPoint","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","elementDragControls","WeakMap","VisualElementDragControls","openDragLock","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","panSession","pauseAnimation","stopAnimation","drag","dragPropagation","onDragStart","resolveConstraints","projection","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","_this$getAxisMotionVa","getAnimationState","getTransformPagePoint","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","_this$visualElement$p","dragConstraints","measure","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","_this$getAxisMotionVa2","_this$getAxisMotionVa3","dragKey","toUpperCase","externalMotionValue","scalePositionWithinConstraints","boxProgress","sourceLength","targetLength","calcOrigin","updateScroll","updateLayout","addListeners","stopPointerListener","dragListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","stopLayoutUpdateListener","hasLayoutChanged","asyncHandler","microtask","cancelMicrotask","SwitchLayoutGroupContext","createContext","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","pixelsToPercent","pixels","correctBorderRadius","correct","correctBoxShadow","treeScale","projectionDelta","original","shadow","xScale","yScale","averageScale","scaleCorrectors","MeasureLayoutWithContext","Component","componentDidMount","layoutGroup","switchLayoutGroup","layoutId","correctors","isCSSVariable","addScaleCorrector","defaultScaleCorrectors","group","didUpdate","safeToRemove","setOptions","getSnapshotBeforeUpdate","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","componentDidUpdate","currentAnimation","isLead","componentWillUnmount","promoteContext","scheduleCheckAfterUnmount","remove","deregister","MeasureLayout","usePresence","useContext","LayoutGroupContext","jsx","borderRadius","applyTo","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","boxShadow","isSVGElement","isObject","compareByDepth","depth","FlatTree","children","isDirty","timeout","checkElapsed","resolveMotionValue","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","copyAxisDeltaInto","originDelta","removePointDelta","removeAxisTransforms","transforms","sourceAxis","scaleKey","originKey","removeAxisDelta","xKeys","yKeys","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","axisEquals","axisEqualsRounded","boxEqualsRounded","aspectRatio","axisDeltaEquals","NodeStack","scheduleRender","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","exitAnimationComplete","resumingFrom","removeLeadSnapshot","metrics","nodes","calculatedTargetDeltas","calculatedProjections","transformAxes","hiddenVisibility","visibility","resetDistortingTransform","sharedAnimationValues","setStaticValue","cancelTreeOptimisedTransformAnimations","projectionNode","hasCheckedOptimisedAppear","MotionHasOptimisedAnimation","MotionCancelOptimisedAnimation","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","hasTreeAnimated","updateScheduled","scheduleUpdate","projectionUpdateScheduled","checkUpdateFailed","clearAllSnapshots","updateProjection","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","resolvedRelativeTargetAt","hasProjected","isVisible","animationProgress","sharedNodes","path","notifyListeners","subscriptionManager","args","hasListeners","tagName","cancelDelay","resizeUnblockUpdate","finishAnimation","registerSharedNode","hasRelativeLayoutChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","hasTargetChanged","targetLayout","hasOnlyRelativeTargetChanged","layoutRoot","animationOptions","setAnimationOrigin","blockUpdate","unblockUpdate","isUpdateBlocked","startUpdate","resetSkewAndRotation","getTransformTemplate","shouldNotifyListeners","prevTransformTemplateValue","updateSnapshot","clearMeasurements","clearIsLayoutDirty","resetTransformStyle","notifyLayoutUpdate","clearSnapshot","removeLeadSnapshots","scheduleUpdateProjection","measuredBox","alwaysMeasureLayout","prevLayout","layoutCorrected","phase","layoutScroll","isRoot","wasRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","_this$scroll","checkNodeWasScrollRoot","_this$scroll2","boxWithoutScroll","applyTransform","transformOnly","withTransforms","boxWithoutTransform","setTargetDelta","targetDelta","forceRelativeParentToResolveTarget","relativeParent","_this$parent","forceRecalculation","getLead","isShared","attemptToResolveRelativeTarget","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","isProjecting","_this$parent2","canSkip","pendingAnimation","prevTreeScaleX","prevTreeScaleY","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","prevProjectionDelta","createProjectionDeltas","_this$options$visualE","notifyAll","projectionDeltaWithTransform","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","prevRelativeTarget","mixTargetDelta","mixAxisDelta","mixAxis","follow","_lead$opacity","_follow$opacity","opacityExit","_follow$opacity2","_lead$opacity2","borderLabel","followRadius","leadRadius","mixValues","_this$currentAnimatio","_this$resumingFrom","motionValue$1","animateSingleValue","completeAnimation","applyTransformsToTarget","shouldAnimatePositionOnly","animationType","xLength","yLength","config","initialPromotionConfig","shouldPreserveFollowOpacity","_this$getStack","getPrevLead","_this$getStack2","hasDistortingTransform","resetValues","getProjectionStyles","styleProp","styles","pointerEvents","emptyStyles","valuesToRender","latestTransform","xTranslate","yTranslate","zTranslate","transformPerspective","elementScaleX","elementScaleY","buildProjectionTransform","_valuesToRender$opaci","transformOrigin","corrected","num","renderState","vars","resetTree","_node$currentAnimatio","_node$resumeFrom","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","userAgentContains","string","navigator","userAgent","roundPoint","maxDistance","_node$scroll","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","getComputedStyle","position","pan","removePointerDownListener","onPointerDown","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","removeGroupControls","controls","dragControls","ProjectionNode","setupGesture","elementOrSelector","elements","resolveElements","gestureAbortController","AbortController","signal","abort","isValidHover","handleHoverEvent","lifecycle","isNodeOrChild","parentElement","focusableElements","isPressing","filterEvents","firePointerEvent","dispatchEvent","PointerEvent","bubbles","isValidPressEvent","press","targetOrSelector","onPressStart","targets","eventOptions","cancelEvents","startPress","currentTarget","onPressEnd","onPointerEnd","endEvent","success","onPointerUp","onPointerCancel","upEvent","useGlobalTarget","cancelEvent","enableKeyboardPress","focusEvent","handleKeydown","handleKeyup","handleBlur","tabIndex","hasAttribute","handlePressEvent","HTMLButtonElement","disabled","observerCallbacks","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","unobserve","thresholdNames","gestureAnimations","inView","hasEnteredView","isInView","startObserver","viewport","margin","rootMargin","amount","once","threshold","isIntersecting","onViewportEnter","onViewportLeave","hasOptionsChanged","prevViewport","hasViewportOptionChanged","tap","_element","globalTapTarget","focus","onFocus","isFocusVisible","matches","onBlur","hover","onHoverStart","onPointerEnter","enterEvent","onHoverEnd","onPointerLeave","leaveEvent","LazyContext","strict","MotionContext","isVariantNode","useCreateMotionContext","inherit","getCurrentTreeVariants","useMemo","variantLabelsAsDependency","join","featureProps","featureDefinitions","isEnabled","motionComponentSymbol","Symbol","for","useMotionRef","visualState","externalRef","useCallback","onMount","useVisualElement","createVisualElement","ProjectionNodeConstructor","_window$MotionHandoff","_window","_window$MotionHasOpti","_window2","lazyContext","PresenceContext","reducedMotionConfig","MotionConfigContext","reducedMotion","visualElementRef","useRef","renderer","initialLayoutGroupConfig","layoutCrossfade","getClosestProjectingNode","useInsertionEffect","optimisedAppearId","wantsHandoff","MotionHandoffIsComplete","useIsomorphicLayoutEffect","MotionIsMounted","updateFeatures","useEffect","_window$MotionHandoff2","_window3","MotionHandoffMarkAsComplete","allowProjection","createRendererMotionComponent","_Component$displayNam","preloadedFeatures","useRender","useVisualState","MotionComponent","configAndProps","useLayoutId","isStatic","isBrowser","useStrictMode","layoutProjection","combined","getProjectionFunctionality","jsxs","Provider","features","loadFeatures","displayName","ForwardRefMotionComponent","forwardRef","layoutGroupId","isForcedMotionValue","getValueAsType","int","transformValueTypes","scaleZ","perspective","originZ","numberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","radius","maxWidth","maxHeight","padding","marginTop","marginRight","marginBottom","marginLeft","backgroundPositionX","backgroundPositionY","zIndex","fillOpacity","strokeOpacity","numOctaves","translateAlias","numTransforms","buildHTMLStyles","hasTransformOrigin","valueAsType","transformString","transformIsDefault","valueIsDefault","buildTransform","createHtmlRenderState","copyRawValuesOnly","useStyle","useInitialMotionValues","useHTMLProps","htmlProps","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","onTap","onTapStart","dashKeys","array","camelKeys","buildSVGAttrs","isSVGTag","attrX","attrY","attrScale","pathLength","pathSpacing","pathOffset","viewBox","attrs","_attrs$transformOrigi","_styleProp$transformB","spacing","useDashCase","buildSVGPath","createSvgRenderState","tag","useSVGProps","_isStatic","visualProps","rawStyles","validMotionProps","isValidMotionProp","shouldForward","isValidProp","require","_unused","lowercaseSVGElements","isSVGComponent","createUseRender","forwardMotionProps","filteredProps","isDom","filterProps","elementProps","Fragment","renderedChildren","makeUseVisualState","make","scrapeMotionValuesFromProps","createRenderState","makeLatestValues","makeState","useConstant","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","list","newValues","_visualElement$getVal","htmlMotionConfig","scrapeMotionValuesFromProps$1","charAt","svgMotionConfig","createMotionComponentFactory","baseConfig","testValueType","dimensionValueTypes","findDimensionValueType","isNumericalString","splitCSSVariableRegex","getVariableValue","fallback","exec","token1","token2","parseCSSVariable","getPropertyValue","trimmed","isZeroValueString","maxDefaults","applyDefaultFilter","slice","defaultValue","functionRegex","functions","defaultValueTypes","backgroundColor","outlineColor","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","invalidTemplates","DOMKeyframesResolver","resolveNoneKeyframes","originType","targetType","noneKeyframeIndexes","animatableTemplate","noneIndex","makeNoneKeyframesAnimatable","pageYOffset","measuredOrigin","measureKeyframe","_this$removedTransfor","finalKeyframeIndex","unsetTransformName","unsetTransformValue","valueTypes","prefersReducedMotion","hasReducedMotionListener","visualElementStore","propEventHandlers","VisualElement","_props","_prevProps","_visualElement","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","renderScheduledAt","baseTarget","initialValues","_this$scrapeMotionVal","initialMotionValues","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","feature","valueIsTransform","onBindTransform","removeOnChange","latestValue","removeOnRenderRequest","removeSyncCheck","MotionCheckAppearSync","other","sortInstanceNodePosition","featureDefinition","FeatureConstructor","build","measureInstanceViewportBox","getStaticValue","listener","nextValue","prevValue","existingValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getVariant","getClosestVariantNode","closestVariantNode","removeValueFromRenderState","_this$getBaseTargetFr","getBaseTargetFromProps","readValueFromInstance","setBaseTarget","valueFromInitial","_this$presenceContext","DOMVisualElement","compareDocumentPosition","childSubscription","textContent","renderHTML","HTMLVisualElement","_this$projection","readTransformValue","computedStyle","camelCaseAttributes","SVGVisualElement","defaultType","getAttribute","_styleProp","setAttribute","renderSVG","createDomVisualElement","motion","scope","selectorCache","EventTarget","_selectorCache$elemen","querySelectorAll"],"sourceRoot":""}